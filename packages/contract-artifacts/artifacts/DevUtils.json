{
    "schemaVersion": "2.0.0",
    "contractName": "DevUtils",
    "compilerOutput": {
        "abi": [
            {
                "inputs": [
                    { "internalType": "address", "name": "_exchange", "type": "address" },
                    { "internalType": "address", "name": "_chaiBridge", "type": "address" }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "constructor"
            },
            {
                "constant": true,
                "inputs": [],
                "name": "EIP712_EXCHANGE_DOMAIN_HASH",
                "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeAssetProxyDispatchError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.AssetProxyDispatchErrorCodes",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeAssetProxyExistsError",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "assetProxyAddress", "type": "address" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeAssetProxyId",
                "outputs": [{ "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeAssetProxyTransferError",
                "outputs": [
                    { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" },
                    { "internalType": "bytes", "name": "errorData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeEIP1271SignatureError",
                "outputs": [
                    { "internalType": "address", "name": "verifyingContractAddress", "type": "address" },
                    { "internalType": "bytes", "name": "data", "type": "bytes" },
                    { "internalType": "bytes", "name": "signature", "type": "bytes" },
                    { "internalType": "bytes", "name": "errorData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeERC1155AssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "tokenAddress", "type": "address" },
                    { "internalType": "uint256[]", "name": "tokenIds", "type": "uint256[]" },
                    { "internalType": "uint256[]", "name": "tokenValues", "type": "uint256[]" },
                    { "internalType": "bytes", "name": "callbackData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeERC20AssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "tokenAddress", "type": "address" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeERC20BridgeAssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "tokenAddress", "type": "address" },
                    { "internalType": "address", "name": "bridgeAddress", "type": "address" },
                    { "internalType": "bytes", "name": "bridgeData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeERC721AssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "tokenAddress", "type": "address" },
                    { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeExchangeInvalidContextError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.ExchangeContextErrorCodes",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                    { "internalType": "address", "name": "contextAddress", "type": "address" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeFillError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.FillErrorCodes",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeIncompleteFillError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.IncompleteFillErrorCode",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "uint256", "name": "expectedAssetFillAmount", "type": "uint256" },
                    { "internalType": "uint256", "name": "actualAssetFillAmount", "type": "uint256" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeMultiAssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "uint256[]", "name": "amounts", "type": "uint256[]" },
                    { "internalType": "bytes[]", "name": "nestedAssetData", "type": "bytes[]" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeNegativeSpreadError",
                "outputs": [
                    { "internalType": "bytes32", "name": "leftOrderHash", "type": "bytes32" },
                    { "internalType": "bytes32", "name": "rightOrderHash", "type": "bytes32" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeOrderEpochError",
                "outputs": [
                    { "internalType": "address", "name": "makerAddress", "type": "address" },
                    { "internalType": "address", "name": "orderSenderAddress", "type": "address" },
                    { "internalType": "uint256", "name": "currentEpoch", "type": "uint256" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeOrderStatusError",
                "outputs": [
                    { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                    { "internalType": "enum LibOrder.OrderStatus", "name": "orderStatus", "type": "uint8" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeSignatureError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.SignatureErrorCodes",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "bytes32", "name": "hash", "type": "bytes32" },
                    { "internalType": "address", "name": "signerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "signature", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeSignatureValidatorNotApprovedError",
                "outputs": [
                    { "internalType": "address", "name": "signerAddress", "type": "address" },
                    { "internalType": "address", "name": "validatorAddress", "type": "address" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeSignatureWalletError",
                "outputs": [
                    { "internalType": "bytes32", "name": "hash", "type": "bytes32" },
                    { "internalType": "address", "name": "signerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "signature", "type": "bytes" },
                    { "internalType": "bytes", "name": "errorData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "decodeStaticCallAssetData",
                "outputs": [
                    { "internalType": "bytes4", "name": "assetProxyId", "type": "bytes4" },
                    { "internalType": "address", "name": "staticCallTargetAddress", "type": "address" },
                    { "internalType": "bytes", "name": "staticCallData", "type": "bytes" },
                    { "internalType": "bytes32", "name": "expectedReturnDataHash", "type": "bytes32" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeTransactionError",
                "outputs": [
                    {
                        "internalType": "enum LibExchangeRichErrors.TransactionErrorCodes",
                        "name": "errorCode",
                        "type": "uint8"
                    },
                    { "internalType": "bytes32", "name": "transactionHash", "type": "bytes32" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "encoded", "type": "bytes" }],
                "name": "decodeTransactionExecutionError",
                "outputs": [
                    { "internalType": "bytes32", "name": "transactionHash", "type": "bytes32" },
                    { "internalType": "bytes", "name": "errorData", "type": "bytes" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "transactionData", "type": "bytes" }],
                "name": "decodeZeroExTransactionData",
                "outputs": [
                    { "internalType": "string", "name": "functionName", "type": "string" },
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    { "internalType": "uint256[]", "name": "takerAssetFillAmounts", "type": "uint256[]" },
                    { "internalType": "bytes[]", "name": "signatures", "type": "bytes[]" }
                ],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    { "internalType": "address", "name": "tokenAddress", "type": "address" },
                    { "internalType": "uint256[]", "name": "tokenIds", "type": "uint256[]" },
                    { "internalType": "uint256[]", "name": "tokenValues", "type": "uint256[]" },
                    { "internalType": "bytes", "name": "callbackData", "type": "bytes" }
                ],
                "name": "encodeERC1155AssetData",
                "outputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "address", "name": "tokenAddress", "type": "address" }],
                "name": "encodeERC20AssetData",
                "outputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    { "internalType": "address", "name": "tokenAddress", "type": "address" },
                    { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
                ],
                "name": "encodeERC721AssetData",
                "outputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    { "internalType": "uint256[]", "name": "amounts", "type": "uint256[]" },
                    { "internalType": "bytes[]", "name": "nestedAssetData", "type": "bytes[]" }
                ],
                "name": "encodeMultiAssetData",
                "outputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    { "internalType": "address", "name": "staticCallTargetAddress", "type": "address" },
                    { "internalType": "bytes", "name": "staticCallData", "type": "bytes" },
                    { "internalType": "bytes32", "name": "expectedReturnDataHash", "type": "bytes32" }
                ],
                "name": "encodeStaticCallAssetData",
                "outputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" }
                ],
                "name": "getAssetProxyAllowance",
                "outputs": [{ "internalType": "uint256", "name": "allowance", "type": "uint256" }],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" }
                ],
                "name": "getBalance",
                "outputs": [{ "internalType": "uint256", "name": "balance", "type": "uint256" }],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" }
                ],
                "name": "getBalanceAndAssetProxyAllowance",
                "outputs": [
                    { "internalType": "uint256", "name": "balance", "type": "uint256" },
                    { "internalType": "uint256", "name": "allowance", "type": "uint256" }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes[]", "name": "assetData", "type": "bytes[]" }
                ],
                "name": "getBatchAssetProxyAllowances",
                "outputs": [{ "internalType": "uint256[]", "name": "allowances", "type": "uint256[]" }],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes[]", "name": "assetData", "type": "bytes[]" }
                ],
                "name": "getBatchBalances",
                "outputs": [{ "internalType": "uint256[]", "name": "balances", "type": "uint256[]" }],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes[]", "name": "assetData", "type": "bytes[]" }
                ],
                "name": "getBatchBalancesAndAssetProxyAllowances",
                "outputs": [
                    { "internalType": "uint256[]", "name": "balances", "type": "uint256[]" },
                    { "internalType": "uint256[]", "name": "allowances", "type": "uint256[]" }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "address[]", "name": "addresses", "type": "address[]" }],
                "name": "getEthBalances",
                "outputs": [{ "internalType": "uint256[]", "name": "", "type": "uint256[]" }],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    },
                    { "internalType": "uint256", "name": "chainId", "type": "uint256" },
                    { "internalType": "address", "name": "exchange", "type": "address" }
                ],
                "name": "getOrderHash",
                "outputs": [{ "internalType": "bytes32", "name": "orderHash", "type": "bytes32" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    },
                    { "internalType": "bytes", "name": "signature", "type": "bytes" }
                ],
                "name": "getOrderRelevantState",
                "outputs": [
                    {
                        "components": [
                            { "internalType": "enum LibOrder.OrderStatus", "name": "orderStatus", "type": "uint8" },
                            { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                            { "internalType": "uint256", "name": "orderTakerAssetFilledAmount", "type": "uint256" }
                        ],
                        "internalType": "struct LibOrder.OrderInfo",
                        "name": "orderInfo",
                        "type": "tuple"
                    },
                    { "internalType": "uint256", "name": "fillableTakerAssetAmount", "type": "uint256" },
                    { "internalType": "bool", "name": "isValidSignature", "type": "bool" }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    { "internalType": "bytes[]", "name": "signatures", "type": "bytes[]" }
                ],
                "name": "getOrderRelevantStates",
                "outputs": [
                    {
                        "components": [
                            { "internalType": "enum LibOrder.OrderStatus", "name": "orderStatus", "type": "uint8" },
                            { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
                            { "internalType": "uint256", "name": "orderTakerAssetFilledAmount", "type": "uint256" }
                        ],
                        "internalType": "struct LibOrder.OrderInfo[]",
                        "name": "ordersInfo",
                        "type": "tuple[]"
                    },
                    { "internalType": "uint256[]", "name": "fillableTakerAssetAmounts", "type": "uint256[]" },
                    { "internalType": "bool[]", "name": "isValidSignature", "type": "bool[]" }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    },
                    { "internalType": "address", "name": "takerAddress", "type": "address" },
                    { "internalType": "uint256", "name": "takerAssetFillAmount", "type": "uint256" }
                ],
                "name": "getSimulatedOrderMakerTransferResults",
                "outputs": [
                    {
                        "internalType": "enum OrderTransferSimulationUtils.OrderTransferResults",
                        "name": "orderTransferResults",
                        "type": "uint8"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order",
                        "name": "order",
                        "type": "tuple"
                    },
                    { "internalType": "address", "name": "takerAddress", "type": "address" },
                    { "internalType": "uint256", "name": "takerAssetFillAmount", "type": "uint256" }
                ],
                "name": "getSimulatedOrderTransferResults",
                "outputs": [
                    {
                        "internalType": "enum OrderTransferSimulationUtils.OrderTransferResults",
                        "name": "orderTransferResults",
                        "type": "uint8"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "address", "name": "makerAddress", "type": "address" },
                            { "internalType": "address", "name": "takerAddress", "type": "address" },
                            { "internalType": "address", "name": "feeRecipientAddress", "type": "address" },
                            { "internalType": "address", "name": "senderAddress", "type": "address" },
                            { "internalType": "uint256", "name": "makerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerAssetAmount", "type": "uint256" },
                            { "internalType": "uint256", "name": "makerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "takerFee", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "bytes", "name": "makerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "makerFeeAssetData", "type": "bytes" },
                            { "internalType": "bytes", "name": "takerFeeAssetData", "type": "bytes" }
                        ],
                        "internalType": "struct LibOrder.Order[]",
                        "name": "orders",
                        "type": "tuple[]"
                    },
                    { "internalType": "address[]", "name": "takerAddresses", "type": "address[]" },
                    { "internalType": "uint256[]", "name": "takerAssetFillAmounts", "type": "uint256[]" }
                ],
                "name": "getSimulatedOrdersTransferResults",
                "outputs": [
                    {
                        "internalType": "enum OrderTransferSimulationUtils.OrderTransferResults[]",
                        "name": "orderTransferResults",
                        "type": "uint8[]"
                    }
                ],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [
                    {
                        "components": [
                            { "internalType": "uint256", "name": "salt", "type": "uint256" },
                            { "internalType": "uint256", "name": "expirationTimeSeconds", "type": "uint256" },
                            { "internalType": "uint256", "name": "gasPrice", "type": "uint256" },
                            { "internalType": "address", "name": "signerAddress", "type": "address" },
                            { "internalType": "bytes", "name": "data", "type": "bytes" }
                        ],
                        "internalType": "struct LibZeroExTransaction.ZeroExTransaction",
                        "name": "transaction",
                        "type": "tuple"
                    },
                    { "internalType": "uint256", "name": "chainId", "type": "uint256" },
                    { "internalType": "address", "name": "exchange", "type": "address" }
                ],
                "name": "getTransactionHash",
                "outputs": [{ "internalType": "bytes32", "name": "transactionHash", "type": "bytes32" }],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            },
            {
                "constant": false,
                "inputs": [
                    { "internalType": "address", "name": "ownerAddress", "type": "address" },
                    { "internalType": "bytes", "name": "assetData", "type": "bytes" }
                ],
                "name": "getTransferableAssetAmount",
                "outputs": [{ "internalType": "uint256", "name": "transferableAssetAmount", "type": "uint256" }],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "constant": true,
                "inputs": [{ "internalType": "bytes", "name": "assetData", "type": "bytes" }],
                "name": "revertIfInvalidAssetData",
                "outputs": [],
                "payable": false,
                "stateMutability": "pure",
                "type": "function"
            }
        ],
        "devdoc": {
            "methods": {
                "decodeAssetProxyDispatchError(bytes)": {
                    "details": "Decompose an ABI-encoded AssetProxyDispatchError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode The error code.orderHash Hash of the order being dispatched.assetData Asset data of the order being dispatched."
                },
                "decodeAssetProxyExistsError(bytes)": {
                    "details": "Decompose an ABI-encoded AssetProxyExistsError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "assetProxyId Id of asset proxy.assetProxyAddress The address of the asset proxy."
                },
                "decodeAssetProxyId(bytes)": {
                    "details": "Decode AssetProxy identifier",
                    "params": {
                        "assetData": "AssetProxy-compliant asset data describing an ERC-20, ERC-721, ERC1155, or MultiAsset asset."
                    },
                    "return": "The AssetProxy identifier"
                },
                "decodeAssetProxyTransferError(bytes)": {
                    "details": "Decompose an ABI-encoded AssetProxyTransferError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "orderHash Hash of the order being dispatched.assetData Asset data of the order being dispatched.errorData ABI-encoded revert data from the asset proxy."
                },
                "decodeEIP1271SignatureError(bytes)": {
                    "details": "Decompose an ABI-encoded SignatureValidatorError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "signerAddress The expected signer of the hash.signature The full signature bytes.errorData The revert data thrown by the validator contract."
                },
                "decodeERC1155AssetData(bytes)": {
                    "details": "Decode ERC-1155 asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant asset data describing an ERC-1155 set of assets." },
                    "return": "The ERC-1155 AssetProxy identifier, the address of the ERC-1155 contract hosting the assets, an array of the identifiers of the assets to be traded, an array of asset amounts to be traded, and callback data.  Each element of the arrays corresponds to the same-indexed element of the other array.  Return values specified as `memory` are returned as pointers to locations within the memory of the input parameter `assetData`."
                },
                "decodeERC20AssetData(bytes)": {
                    "details": "Decode ERC-20 asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant asset data describing an ERC-20 asset." },
                    "return": "The AssetProxy identifier, and the address of the ERC-20 contract hosting this asset."
                },
                "decodeERC20BridgeAssetData(bytes)": {
                    "details": "Decode ERC20Bridge asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant asset data describing an ERC20Bridge asset" },
                    "return": "The ERC20BridgeProxy identifier, the address of the ERC20 token to transfer, the address of the bridge contract, and extra data to be passed to the bridge contract."
                },
                "decodeERC721AssetData(bytes)": {
                    "details": "Decode ERC-721 asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant asset data describing an ERC-721 asset." },
                    "return": "The ERC-721 AssetProxy identifier, the address of the ERC-721 contract hosting this asset, and the identifier of the specific asset to be traded."
                },
                "decodeExchangeInvalidContextError(bytes)": {
                    "details": "Decompose an ABI-encoded OrderStatusError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode Error code that corresponds to invalid maker, taker, or sender.orderHash The order hash.contextAddress The maker, taker, or sender address"
                },
                "decodeFillError(bytes)": {
                    "details": "Decompose an ABI-encoded FillError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode The error code.orderHash The order hash."
                },
                "decodeIncompleteFillError(bytes)": {
                    "details": "Decompose an ABI-encoded IncompleteFillError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "orderHash Hash of the order being filled."
                },
                "decodeMultiAssetData(bytes)": {
                    "details": "Decode multi-asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant data describing a multi-asset basket." },
                    "return": "The Multi-Asset AssetProxy identifier, an array of the amounts of the assets to be traded, and an array of the AssetProxy-compliant data describing each asset to be traded.  Each element of the arrays corresponds to the same-indexed element of the other array."
                },
                "decodeNegativeSpreadError(bytes)": {
                    "details": "Decompose an ABI-encoded NegativeSpreadError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "leftOrderHash Hash of the left order being matched.rightOrderHash Hash of the right order being matched."
                },
                "decodeOrderEpochError(bytes)": {
                    "details": "Decompose an ABI-encoded OrderEpochError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "makerAddress The order maker.orderSenderAddress The order sender.currentEpoch The current epoch for the maker."
                },
                "decodeOrderStatusError(bytes)": {
                    "details": "Decompose an ABI-encoded OrderStatusError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "orderHash The order hash.orderStatus The order status."
                },
                "decodeSignatureError(bytes)": {
                    "details": "Decompose an ABI-encoded SignatureError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode The error code.signerAddress The expected signer of the hash.signature The full signature."
                },
                "decodeSignatureValidatorNotApprovedError(bytes)": {
                    "details": "Decompose an ABI-encoded SignatureValidatorNotApprovedError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "signerAddress The expected signer of the hash.validatorAddress The expected validator."
                },
                "decodeSignatureWalletError(bytes)": {
                    "details": "Decompose an ABI-encoded SignatureWalletError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode The error code.signerAddress The expected signer of the hash.signature The full signature bytes.errorData The revert data thrown by the validator contract."
                },
                "decodeStaticCallAssetData(bytes)": {
                    "details": "Decode StaticCall asset data from the format described in the AssetProxy contract specification.",
                    "params": { "assetData": "AssetProxy-compliant asset data describing a StaticCall asset" },
                    "return": "The StaticCall AssetProxy identifier, the target address of the StaticCAll, the data to be passed to the target address, and the expected Keccak-256 hash of the static call return data."
                },
                "decodeTransactionError(bytes)": {
                    "details": "Decompose an ABI-encoded TransactionError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "errorCode The error code.transactionHash Hash of the transaction."
                },
                "decodeTransactionExecutionError(bytes)": {
                    "details": "Decompose an ABI-encoded TransactionExecutionError.",
                    "params": { "encoded": "ABI-encoded revert error." },
                    "return": "transactionHash Hash of the transaction.errorData Error thrown by exeucteTransaction()."
                },
                "decodeZeroExTransactionData(bytes)": {
                    "details": "Decodes the call data for an Exchange contract method call.",
                    "params": { "transactionData": "ABI-encoded calldata for an Exchange     contract method call." },
                    "return": "The name of the function called, and the parameters it was     given.  For single-order fills and cancels, the arrays will have     just one element."
                },
                "encodeERC1155AssetData(address,uint256[],uint256[],bytes)": {
                    "details": "Encode ERC-1155 asset data into the format described in the AssetProxy contract specification.",
                    "params": {
                        "callbackData": "Data to be passed to receiving contracts when a transfer is performed.",
                        "tokenAddress": "The address of the ERC-1155 contract hosting the asset(s) to be traded.",
                        "tokenIds": "The identifiers of the specific assets to be traded.",
                        "tokenValues": "The amounts of each asset to be traded."
                    },
                    "return": "AssetProxy-compliant asset data describing the set of assets."
                },
                "encodeERC20AssetData(address)": {
                    "details": "Encode ERC-20 asset data into the format described in the AssetProxy contract specification.",
                    "params": { "tokenAddress": "The address of the ERC-20 contract hosting the asset to be traded." },
                    "return": "AssetProxy-compliant data describing the asset."
                },
                "encodeERC721AssetData(address,uint256)": {
                    "details": "Encode ERC-721 asset data into the format described in the AssetProxy specification.",
                    "params": {
                        "tokenAddress": "The address of the ERC-721 contract hosting the asset to be traded.",
                        "tokenId": "The identifier of the specific asset to be traded."
                    },
                    "return": "AssetProxy-compliant asset data describing the asset."
                },
                "encodeMultiAssetData(uint256[],bytes[])": {
                    "details": "Encode data for multiple assets, per the AssetProxy contract specification.",
                    "params": {
                        "amounts": "The amounts of each asset to be traded.",
                        "nestedAssetData": "AssetProxy-compliant data describing each asset to be traded."
                    },
                    "return": "AssetProxy-compliant data describing the set of assets."
                },
                "encodeStaticCallAssetData(address,bytes,bytes32)": {
                    "details": "Encode StaticCall asset data into the format described in the AssetProxy contract specification.",
                    "params": {
                        "expectedReturnDataHash": "Expected Keccak-256 hash of the StaticCall return data.",
                        "staticCallData": "Data that will be passed to staticCallTargetAddress in the StaticCall.",
                        "staticCallTargetAddress": "Target address of StaticCall."
                    },
                    "return": "AssetProxy-compliant asset data describing the set of assets."
                },
                "getAssetProxyAllowance(address,bytes)": {
                    "details": "Returns the number of asset(s) (described by assetData) that the corresponding AssetProxy contract is authorized to spend.  When the asset data contains multiple assets (eg for Multi-Asset), the return value indicates how many complete \"baskets\" of those assets may be spent by all of the corresponding AssetProxy contracts.",
                    "params": {
                        "assetData": "Details of asset, encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "Number of assets (or asset baskets) that the corresponding AssetProxy is authorized to spend."
                },
                "getBalance(address,bytes)": {
                    "details": "Returns the owner's balance of the assets(s) specified in assetData.  When the asset data contains multiple assets (eg in ERC1155 or Multi-Asset), the return value indicates how many complete \"baskets\" of those assets are owned by owner.",
                    "params": {
                        "assetData": "Details of asset, encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "Number of assets (or asset baskets) held by owner."
                },
                "getBalanceAndAssetProxyAllowance(address,bytes)": {
                    "details": "Calls getBalance() and getAllowance() for assetData.",
                    "params": {
                        "assetData": "Details of asset, encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "Number of assets (or asset baskets) held by owner, and number of assets (or asset baskets) that the corresponding AssetProxy is authorized to spend."
                },
                "getBatchAssetProxyAllowances(address,bytes[])": {
                    "details": "Calls getAssetProxyAllowance() for each element of assetData.",
                    "params": {
                        "assetData": "Array of asset details, each encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "An array of asset allowances from getAllowance(), with each element corresponding to the same-indexed element in the assetData input."
                },
                "getBatchBalances(address,bytes[])": {
                    "details": "Calls getBalance() for each element of assetData.",
                    "params": {
                        "assetData": "Array of asset details, each encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "Array of asset balances from getBalance(), with each element corresponding to the same-indexed element in the assetData input."
                },
                "getBatchBalancesAndAssetProxyAllowances(address,bytes[])": {
                    "details": "Calls getBatchBalances() and getBatchAllowances() for each element of assetData.",
                    "params": {
                        "assetData": "Array of asset details, each encoded per the AssetProxy contract specification.",
                        "ownerAddress": "Owner of the assets specified by assetData."
                    },
                    "return": "An array of asset balances from getBalance(), and an array of asset allowances from getAllowance(), with each element corresponding to the same-indexed element in the assetData input."
                },
                "getEthBalances(address[])": {
                    "details": "Batch fetches ETH balances",
                    "params": { "addresses": "Array of addresses." },
                    "return": "Array of ETH balances."
                },
                "getOrderRelevantState((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),bytes)": {
                    "details": "Fetches all order-relevant information needed to validate if the supplied order is fillable.",
                    "params": {
                        "order": "The order structure.",
                        "signature": "Signature provided by maker that proves the order's authenticity. `0x01` can always be provided if the signature does not need to be validated."
                    },
                    "return": "The orderInfo (hash, status, and `takerAssetAmount` already filled for the given order), fillableTakerAssetAmount (amount of the order's `takerAssetAmount` that is fillable given all on-chain state), and isValidSignature (validity of the provided signature). NOTE: If the `takerAssetData` encodes data for multiple assets, `fillableTakerAssetAmount` will represent a \"scaled\" amount, meaning it must be multiplied by all the individual asset amounts within the `takerAssetData` to get the final amount of each asset that can be filled."
                },
                "getOrderRelevantStates((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[])": {
                    "details": "Fetches all order-relevant information needed to validate if the supplied orders are fillable.",
                    "params": {
                        "orders": "Array of order structures.",
                        "signatures": "Array of signatures provided by makers that prove the authenticity of the orders. `0x01` can always be provided if a signature does not need to be validated."
                    },
                    "return": "The ordersInfo (array of the hash, status, and `takerAssetAmount` already filled for each order), fillableTakerAssetAmounts (array of amounts for each order's `takerAssetAmount` that is fillable given all on-chain state), and isValidSignature (array containing the validity of each provided signature). NOTE: If the `takerAssetData` encodes data for multiple assets, each element of `fillableTakerAssetAmounts` will represent a \"scaled\" amount, meaning it must be multiplied by all the individual asset amounts within the `takerAssetData` to get the final amount of each asset that can be filled."
                },
                "getSimulatedOrderMakerTransferResults((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),address,uint256)": {
                    "details": "Simulates the maker transfers within an order and returns the index of the first failed transfer.",
                    "params": {
                        "order": "The order to simulate transfers for.",
                        "takerAddress": "The address of the taker that will fill the order.",
                        "takerAssetFillAmount": "The amount of takerAsset that the taker wished to fill."
                    },
                    "return": "The index of the first failed transfer (or 4 if all transfers are successful)."
                },
                "getSimulatedOrderTransferResults((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes),address,uint256)": {
                    "details": "Simulates all of the transfers within an order and returns the index of the first failed transfer.",
                    "params": {
                        "order": "The order to simulate transfers for.",
                        "takerAddress": "The address of the taker that will fill the order.",
                        "takerAssetFillAmount": "The amount of takerAsset that the taker wished to fill."
                    },
                    "return": "The index of the first failed transfer (or 4 if all transfers are successful)."
                },
                "getSimulatedOrdersTransferResults((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],address[],uint256[])": {
                    "details": "Simulates all of the transfers for each given order and returns the indices of each first failed transfer.",
                    "params": {
                        "orders": "Array of orders to individually simulate transfers for.",
                        "takerAddresses": "Array of addresses of takers that will fill each order.",
                        "takerAssetFillAmounts": "Array of amounts of takerAsset that will be filled for each order."
                    },
                    "return": "The indices of the first failed transfer (or 4 if all transfers are successful) for each order."
                },
                "getTransferableAssetAmount(address,bytes)": {
                    "details": "Gets the amount of an asset transferable by the owner.",
                    "params": {
                        "assetData": "Description of tokens, per the AssetProxy contract specification.",
                        "ownerAddress": "Address of the owner of the asset."
                    },
                    "return": "The amount of the asset tranferable by the owner. NOTE: If the `assetData` encodes data for multiple assets, the `transferableAssetAmount` will represent the amount of times the entire `assetData` can be transferred. To calculate the total individual transferable amounts, this scaled `transferableAmount` must be multiplied by the individual asset amounts located within the `assetData`."
                },
                "revertIfInvalidAssetData(bytes)": {
                    "details": "Reverts if assetData is not of a valid format for its given proxy id.",
                    "params": { "assetData": "AssetProxy compliant asset data." }
                }
            }
        },
        "evm": {
            "bytecode": {
                "object": "0x60806040523480156200001157600080fd5b506040516200632738038062006327833981016040819052620000349162000409565b600080546001600160a01b0319166001600160a01b0384811691909117808355604051630c0e082160e31b81528392869286928492839285929116906360704108906200008d90630f47261b60e41b9060040162000447565b60206040518083038186803b158015620000a657600080fd5b505afa158015620000bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620000e19190810190620003d9565b600180546001600160a01b0319166001600160a01b03928316179055600054604051630c0e082160e31b81529116906360704108906200012d9063012b8bc960e11b9060040162000447565b60206040518083038186803b1580156200014657600080fd5b505afa1580156200015b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620001819190810190620003d9565b600280546001600160a01b0319166001600160a01b03928316179055600054604051630c0e082160e31b8152911690636070410890620001cd9063a7cb5fb760e01b9060040162000447565b60206040518083038186803b158015620001e657600080fd5b505afa158015620001fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620002219190810190620003d9565b600380546001600160a01b0319166001600160a01b03928316179055600054604051630c0e082160e31b81529116906360704108906200026d9063619ce88560e11b9060040162000447565b60206040518083038186803b1580156200028657600080fd5b505afa1580156200029b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620002c19190810190620003d9565b600480546001600160a01b03199081166001600160a01b039384161790915560058054821693831693909317909255600680549092169381169390931790555060009250831615905062000316578162000318565b305b9050620003736040518060400160405280600b81526020016a0c1e08141c9bdd1bd8dbdb60aa1b815250604051806040016040528060058152602001640332e302e360dc1b81525085846200038260201b6200384e1760201c565b60075550620004759350505050565b8351602094850120835193850193909320604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815295860194909452928401929092526060830152608082015260a0902090565b600060208284031215620003eb578081fd5b81516001600160a01b038116811462000402578182fd5b9392505050565b600080604083850312156200041c578081fd5b825162000429816200045c565b60208401519092506200043c816200045c565b809150509250929050565b6001600160e01b031991909116815260200190565b6001600160a01b03811681146200047257600080fd5b50565b615ea280620004856000396000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80638f4ce4791161015c578063c26cfecd116100ce578063d3d862d111610087578063d3d862d1146106d7578063d4695028146106ea578063e25cabf71461070a578063e4e6e7da1461072c578063e77286eb1461074d578063ee4f5a941461076f5761027f565b8063c26cfecd14610652578063ca49f47c1461065a578063cafd3a071461067d578063d001c5dc1461069e578063d186037f146106b1578063d3637905146106c45761027f565b8063a5cd62ba11610120578063a5cd62ba146105a6578063a6627e9f146105c6578063acaedc74146105d9578063b43cffe1146105fc578063bbb2dcf61461060f578063bc03f964146106315761027f565b80638f4ce479146105265780639a7e7526146105395780639eadc8351461055c578063a070cac814610580578063a0901e51146105935761027f565b80634dfdac20116101f5578063750bdb30116101b9578063750bdb301461047b5780637914b2ec1461049e5780637982653e146104bf57806379c9c426146104df5780637b66ad34146104f25780637d727512146105135761027f565b80634dfdac20146103e3578063590aa8751461040357806363eb39921461042357806365129042146104365780636f83188e146104585761027f565b8063314853ff11610247578063314853ff14610333578063327d30541461035557806332aae3ad146103685780633db6dc611461038a578063459be5e2146103ad57806346eb65cb146103ce5761027f565b806302d0aec31461028457806304a5618a146102ae5780630d7b7d76146102d0578063165979e1146102f15780632322cf7614610313575b600080fd5b610297610292366004614e86565b610791565b6040516102a592919061589f565b60405180910390f35b6102c16102bc366004614e86565b6107ed565b6040516102a5939291906159cd565b6102e36102de3660046149ce565b610868565b6040516102a592919061584d565b6103046102ff366004614e86565b61088a565b6040516102a593929190615b0c565b6103266103213660046149ce565b6108e7565b6040516102a59190615808565b610346610341366004614e86565b61090f565b6040516102a593929190615874565b6102e3610363366004614e86565b610956565b61037b610376366004614e86565b610998565b6040516102a593929190615a7d565b61039d610398366004614e86565b6109eb565b6040516102a59493929190615811565b6103c06103bb366004614e86565b610a35565b6040516102a5929190615af0565b6103e16103dc366004614e86565b610a8b565b005b6103f66103f13660046148f7565b610ba9565b6040516102a591906157a2565b610416610411366004614711565b610c2c565b6040516102a59190615a2c565b610416610431366004614a11565b610c83565b610449610444366004614e86565b610ce0565b6040516102a593929190615569565b61046b610466366004614e86565b610d1a565b6040516102a59493929190615b8b565b61048e610489366004614e86565b611527565b6040516102a594939291906158f4565b6104b16104ac366004614e86565b6115a5565b6040516102a59291906158d1565b6104d26104cd366004614f4e565b6115dd565b6040516102a59190615b27565b6103266104ed3660046150fd565b611864565b610505610500366004614e86565b6118c3565b6040516102a592919061554f565b6103266105213660046149ce565b6118fb565b6104b1610534366004614e86565b611e35565b61054c610547366004614e86565b611e92565b6040516102a59493929190615b3b565b61056f61056a366004614e86565b611ef3565b6040516102a5959493929190615930565b61032661058e366004614ffb565b611f6b565b6103f66105a1366004614a92565b611fc2565b6105b96105b4366004614af6565b61203b565b6040516102a591906156bb565b6104166105d4366004614a67565b6120fe565b6105ec6105e7366004614e86565b612157565b6040516102a59493929190615615565b61041661060a366004614944565b612193565b61062261061d366004614e86565b6121f2565b6040516102a5939291906159f8565b61064461063f366004614e86565b61226c565b6040516102a592919061585b565b6103266122a5565b61066d610668366004614e86565b6122ab565b6040516102a59493929190615988565b61069061068b366004614e86565b61231c565b6040516102a5929190615b74565b6103f66106ac3660046148f7565b61236a565b6103266106bf3660046149ce565b6123d8565b6104d26106d2366004614f4e565b612ab2565b6104166106e5366004614c90565b612e12565b6106fd6106f8366004614e86565b612e31565b6040516102a591906158bc565b61071d610718366004614b6f565b612ee1565b6040516102a593929190615707565b61073f61073a3660046148f7565b613019565b6040516102a59291906157e3565b61076061075b366004614fa5565b613032565b6040516102a593929190615cf1565b61078261077d366004614e86565b61326a565b6040516102a593929190615ac6565b6000806107a5836107a06132a7565b6132b2565b60006107be60048551866132f29092919063ffffffff16565b8060200190516107d19190810190614e39565b909350905060ff811660068111156107e557fe5b915050915091565b60008080610801848263ffffffff61333516565b92506001600160e01b0319831663012b8bc960e11b1461083c5760405162461bcd60e51b815260040161083390615cc9565b60405180910390fd5b61084d84601063ffffffff61336916565b915061086084602463ffffffff61339c16565b929491935050565b60008061087584846118fb565b915061088184846123d8565b90509250929050565b600080600061089b846107a06133a8565b60006108b460048651876132f29092919063ffffffff16565b8060200190516108c791908101906152cc565b9094509250905060ff811660028111156108dd57fe5b9350509193909250565b60008060006108f68585610868565b9150915061090482826133b3565b925050505b92915050565b6000606080610920846107a06133c9565b835161093690859060049063ffffffff6132f216565b8060200190516109499190810190614dda565b9196909550909350915050565b600080610965836107a06133d4565b825161097b90849060049063ffffffff6132f216565b80602001905161098e9190810190614d7d565b9094909350915050565b60008060606109a9846107a06133df565b60006109c260048651876132f29092919063ffffffff16565b8060200190516109d5919081019061528d565b9094509250905060ff811660018111156108dd57fe5b6000806060806109fd856107a06133ea565b8451610a1390869060049063ffffffff6132f216565b806020019051610a269190810190614d3a565b92989197509550909350915050565b600080610a44836107a06133f5565b6000610a5d60048551866132f29092919063ffffffff16565b806020019051610a7091908101906151cc565b9250905060ff81166003811115610a8357fe5b925050915091565b6000610a9d828263ffffffff61333516565b90506001600160e01b03198116630f47261b60e41b1415610ac857610ac182611e35565b5050610ba5565b6001600160e01b0319811663012b8bc960e11b1415610af257610aea826107ed565b505050610ba5565b6001600160e01b0319811663a7cb5fb760e01b1415610b1e57610b1482611ef3565b5050505050610ba5565b6001600160e01b031981166394cfcdd760e01b1415610b4057610aea826121f2565b6001600160e01b0319811663619ce88560e11b1415610b6b57610b62826122ab565b50505050610ba5565b6001600160e01b0319811663dc1600f360e01b1415610b8d57610b6282611527565b60405162461bcd60e51b815260040161083390615cc9565b5050565b606060008251905080604051908082528060200260200182016040528015610bdb578160200160208202803883390190505b50915060005b818114610c2457610c0585858381518110610bf857fe5b60200260200101516123d8565b838281518110610c1157fe5b6020908102919091010152600101610be1565b505092915050565b604051606090630f47261b60e41b90610c4990849060240161553b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290505b919050565b60405160609063619ce88560e11b90610ca4908690869086906024016155e1565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290505b9392505050565b6000806000610cf1846107a0613400565b8351610d0790859060049063ffffffff6132f216565b80602001905161094991908101906147c7565b60608080806000610d31868263ffffffff61333516565b90506001600160e01b0319811663dedfc1f160e01b1415610d7d5760405180604001604052806011815260200170626174636843616e63656c4f726465727360781b8152509450611129565b6001600160e01b03198116634b4a520160e11b1415610dc5576040518060400160405280600f81526020016e626174636846696c6c4f726465727360881b8152509450611129565b6001600160e01b031981166323aa37f960e21b1415610e145760405180604001604052806016815260200175626174636846696c6c4f72646572734e6f5468726f7760501b8152509450611129565b6001600160e01b03198116632fbb8b8560e21b1415610e625760405180604001604052806015815260200174626174636846696c6c4f724b696c6c4f726465727360581b8152509450611129565b6001600160e01b03198116632da6298760e01b1415610ea6576040518060400160405280600b81526020016a31b0b731b2b627b93232b960a91b8152509450611129565b6001600160e01b03198116634da26aab60e11b1415610ee857604051806040016040528060098152602001683334b63627b93232b960b91b8152509450611129565b6001600160e01b03198116633852d63160e21b1415610f30576040518060400160405280600f81526020016e3334b63627b925b4b63627b93232b960891b8152509450611129565b6001600160e01b031981166378d29ac160e01b1415610f7f57604051806040016040528060168152602001756d61726b65744275794f72646572734e6f5468726f7760501b8152509450611129565b6001600160e01b0319811663369da09960e01b1415610fd5576040518060400160405280601781526020017f6d61726b657453656c6c4f72646572734e6f5468726f770000000000000000008152509450611129565b6001600160e01b03198116638bc8efb360e01b141561102b576040518060400160405280601981526020017f6d61726b65744275794f726465727346696c6c4f724b696c6c000000000000008152509450611129565b6001600160e01b0319811663a6c3bf3360e01b1415611081576040518060400160405280601a81526020017f6d61726b657453656c6c4f726465727346696c6c4f724b696c6c0000000000008152509450611129565b6001600160e01b031981166388ec79fb60e01b14156110c5576040518060400160405280600b81526020016a6d617463684f726465727360a81b8152509450611129565b6001600160e01b03198116634f9559b160e01b14806110f457506001600160e01b031981166302280c9160e41b145b156111115760405162461bcd60e51b815260040161083390615c7c565b60405162461bcd60e51b815260040161083390615c45565b6001600160e01b0319811663dedfc1f160e01b14156111b557855161115890879060049063ffffffff61340b16565b80602001905161116b9190810190614ac4565b604080516000808252602082019092529195505b50604080516000808252602082019092529194506111ad565b60608152602001906001900390816111985790505b50915061151f565b6001600160e01b03198116632fbb8b8560e21b14806111e457506001600160e01b03198116634b4a520160e11b145b806111ff57506001600160e01b031981166323aa37f960e21b145b156112195761120d8661348b565b9195509350915061151f565b6001600160e01b03198116632da6298760e01b14156112e85760408051600180825281830190925290816020015b61124f614044565b815260200190600190039081611247575050865190945061127a90879060049063ffffffff61340b16565b80602001905161128d9190810190614f1c565b8460008151811061129a57fe5b6020026020010181905250600060405190808252806020026020018201604052801561117f5781602001602082028038833901905050604080516000808252602082019092529194506111ad565b6001600160e01b03198116633852d63160e21b148061131757506001600160e01b03198116634da26aab60e11b145b156113255761120d866134ba565b6001600160e01b031981166378d29ac160e01b148061135457506001600160e01b0319811663369da09960e01b145b8061136f57506001600160e01b03198116638bc8efb360e01b145b8061138a57506001600160e01b0319811663a6c3bf3360e01b145b156113985761120d866135b4565b6001600160e01b031981166388ec79fb60e01b141561151f576113b9614044565b6113c1614044565b6060806113db60048b518c61340b9092919063ffffffff16565b8060200190516113ee9190810190615053565b604080516002808252606082019092529498509296509094509250816020015b611416614044565b81526020019060019003908161140e579050509750838860008151811061143957fe5b6020026020010181905250828860018151811061145257fe5b602090810291909101015260408051600280825260608201909252908160200160208202803883390190505096508360a001518760008151811061149257fe5b6020026020010181815250508260a00151876001815181106114b057fe5b60209081029190910101526040805160028082526060820190925290816020015b60608152602001906001900390816114d157905050955081866000815181106114f657fe5b6020026020010181905250808660018151811061150f57fe5b6020026020010181905250505050505b509193509193565b60008080606061153d858363ffffffff61333516565b93506001600160e01b0319841663dc1600f360e01b1461156f5760405162461bcd60e51b815260040161083390615cc9565b845161158590869060049063ffffffff61340b16565b8060200190516115989190810190614766565b9597919650949350915050565b6000806115b4836107a0613628565b82516115ca90849060049063ffffffff6132f216565b80602001905161098e9190810190614e5d565b60006115e76140d7565b6116788584600660009054906101000a90046001600160a01b03166001600160a01b0316631ce4c78b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561163a57600080fd5b505afa15801561164e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061167291908101906151b4565b3a613632565b60408051600280825260608281019093529293509091816020015b606081526020019060019003908161169357505060408051600280825260608083018452939450909160208301908038833950506040805160028082526060808301845294955090925090602083019080388339505060408051600280825260608083018452949550909250906020830190803883390190505090508861014001518460008151811061172257fe5b602002602001018190525088600001518360008151811061173f57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050878260008151811061176d57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084600001518160008151811061179f57fe5b602002602001018181525050886101800151846001815181106117be57fe5b60200260200101819052508860000151836001815181106117db57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505088604001518260018151811061180d57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084604001518160018151811061183f57fe5b602002602001018181525050611857848484846136a9565b9998505050505050505050565b60006118bb846118b66040518060400160405280600b81526020016a0c1e08141c9bdd1bd8dbdb60aa1b815250604051806040016040528060058152602001640332e302e360dc1b815250878761384e565b6138a5565b949350505050565b6000806118d2836107a06138b9565b82516118e890849060049063ffffffff6132f216565b80602001905161098e919081019061472d565b60008061190e838263ffffffff61333516565b90506001600160e01b03198116630f47261b60e41b141561195057600061193c84601063ffffffff61336916565b905061194881866138c4565b925050611e2e565b6001600160e01b0319811663012b8bc960e11b1415611a8f57600080611975856107ed565b6040519194509250606091506331a9108f60e11b90611998908490602401615808565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060846001600160a01b0316836040516119e9919061551f565b600060405180830381855afa9150503d8060008114611a24576040519150601f19603f3d011682016040523d82523d6000602084013e611a29565b606091505b50915091506000828015611a3e575081516020145b611a49576000611a5a565b611a5a82600c63ffffffff61336916565b9050896001600160a01b0316816001600160a01b031614611a7c576000611a7f565b60015b60ff169750505050505050611e2e565b6001600160e01b0319811663a7cb5fb760e01b1415611c16576000606080611ab686611ef3565b5081519296509094509250905060005b818114611c0c578351606090627eeac760e11b908b90879085908110611ae857fe5b6020026020010151604051602401611b0192919061564b565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060876001600160a01b031683604051611b52919061551f565b600060405180830381855afa9150503d8060008114611b8d576040519150601f19603f3d011682016040523d82523d6000602084013e611b92565b606091505b50915091506000828015611ba7575081516020145b611bb2576000611bc3565b611bc382600063ffffffff61339c16565b90506000878681518110611bd357fe5b60200260200101518281611be357fe5b0490508b811080611bf257508b155b15611bfb57809b505b505060019093019250611ac6915050565b5050505050611e2e565b6001600160e01b0319811663619ce88560e11b1415611d0257604051606090632a17967960e21b90611c5390869060009081908190602401615a3f565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260045491519092506000916001600160a01b031690611ca590849061551f565b600060405180830381855afa9150503d8060008114611ce0576040519150601f19603f3d011682016040523d82523d6000602084013e611ce5565b606091505b5050905080611cf5576000611cf9565b6000195b93505050611e2e565b6001600160e01b0319811663dc1600f360e01b1415611d9057600080611d2785611527565b509250925050611d356139ae565b6001600160a01b0316826001600160a01b0316148015611d6257506005546001600160a01b038281169116145b15611d89576000611d7a611d746139c6565b886138c4565b9050611d85816139de565b9450505b5050611e2e565b6001600160e01b031981166394cfcdd760e01b1415611e2e57606080611db5856121f2565b80519194509250905060005b818114611e29576000611de789858481518110611dda57fe5b60200260200101516118fb565b90506000858381518110611df757fe5b60200260200101518281611e0757fe5b04905087811080611e16575087155b15611e1f578097505b5050600101611dc1565b505050505b5092915050565b600080611e48838263ffffffff61333516565b91506001600160e01b03198216630f47261b60e41b14611e7a5760405162461bcd60e51b815260040161083390615cc9565b611e8b83601063ffffffff61336916565b9050915091565b60008060006060611ea5856107a0613bdc565b6000611ebe60048751886132f29092919063ffffffff16565b806020019051611ed19190810190615230565b91965094509250905060ff81166006811115611ee957fe5b9450509193509193565b60008060608080611f0a868563ffffffff61333516565b94506001600160e01b0319851663a7cb5fb760e01b14611f3c5760405162461bcd60e51b815260040161083390615cc9565b505050506024828101516044840151606485015160848601519496929591820184019490820184019391010190565b60006118bb84611fbd6040518060400160405280600b81526020016a0c1e08141c9bdd1bd8dbdb60aa1b815250604051806040016040528060058152602001640332e302e360dc1b815250878761384e565b613be7565b6060808251604051908082528060200260200182016040528015611ff0578160200160208202803883390190505b50905060005b83518114611e2e5783818151811061200a57fe5b60200260200101516001600160a01b03163182828151811061202857fe5b6020908102919091010152600101611ff6565b60606000845190508060405190808252806020026020018201604052801561206d578160200160208202803883390190505b50915060005b8181146120f5576120be86828151811061208957fe5b602002602001015186838151811061209d57fe5b60200260200101518684815181106120b157fe5b6020026020010151612ab2565b8382815181106120ca57fe5b602002602001019060048111156120dd57fe5b908160048111156120ea57fe5b905250600101612073565b50509392505050565b60405160609063012b8bc960e11b9061211d908590859060240161564b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905092915050565b6000606080606061216a856107a0613bf6565b845161218090869060049063ffffffff6132f216565b806020019051610a269190810190614860565b60405160609063a7cb5fb760e01b906121b690879087908790879060240161558d565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050949350505050565b6000606080612207848463ffffffff61333516565b92506001600160e01b031983166394cfcdd760e01b146122395760405162461bcd60e51b815260040161083390615cc9565b835161224f90859060049063ffffffff61340b16565b8060200190516122629190810190614cc4565b9395909450915050565b6000606061227c836107a0613c01565b825161229290849060049063ffffffff6132f216565b80602001905161098e9190810190614da0565b60075481565b6000806060816122c1858263ffffffff61333516565b93506001600160e01b0319841663619ce88560e11b146122f35760405162461bcd60e51b815260040161083390615cc9565b845161230990869060049063ffffffff61340b16565b8060200190516115989190810190614809565b60008061232b836107a0613c0c565b600061234460048551866132f29092919063ffffffff16565b80602001905161235791908101906151cc565b9250905060ff81166001811115610a8357fe5b60606000825190508060405190808252806020026020018201604052801561239c578160200160208202803883390190505b50915060005b818114610c24576123b985858381518110611dda57fe5b8382815181106123c557fe5b60209081029190910101526001016123a2565b6000806123eb838263ffffffff61333516565b90506001600160e01b031981166394cfcdd760e01b141561248457606080612412856121f2565b80519194509250905060005b81811461247957600061243789858481518110610bf857fe5b9050600085838151811061244757fe5b6020026020010151828161245757fe5b04905087811080612466575087155b1561246f578097505b505060010161241e565b506109099350505050565b6001600160e01b03198116630f47261b60e41b14156125a85760006124b084601063ffffffff61336916565b600154604051919250606091636eb1769f60e11b916124dd9189916001600160a01b03169060240161554f565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060836001600160a01b03168360405161252e919061551f565b600060405180830381855afa9150503d8060008114612569576040519150601f19603f3d011682016040523d82523d6000602084013e61256e565b606091505b5091509150818015612581575080516020145b61258c57600061259d565b61259d81600063ffffffff61339c16565b955050505050611e2e565b6001600160e01b0319811663012b8bc960e11b14156127db576000806125cd856107ed565b6002546040519295509093506060925063e985e9c560e01b91612600918a916001600160a01b039091169060240161554f565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060846001600160a01b031683604051612651919061551f565b600060405180830381855afa9150503d806000811461268c576040519150601f19603f3d011682016040523d82523d6000602084013e612691565b606091505b50915091508115806126a557508051602014155b806126c157506126bc81600063ffffffff61339c16565b600114155b156127cc5760405160609063020604bf60e21b906126e3908790602401615808565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050856001600160a01b031681604051612730919061551f565b600060405180830381855afa9150503d806000811461276b576040519150601f19603f3d011682016040523d82523d6000602084013e612770565b606091505b509093509150828015612784575081516020145b80156127b357506002546001600160a01b03166127a883600c63ffffffff61336916565b6001600160a01b0316145b6127be5760006127c1565b60015b60ff16975050611c0c565b60001996505050505050611e2e565b6001600160e01b0319811663a7cb5fb760e01b14156129095760006127ff84611ef3565b50506003546040519294506060935063e985e9c560e01b92612830925089916001600160a01b03169060240161554f565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060836001600160a01b031683604051612881919061551f565b600060405180830381855afa9150503d80600081146128bc576040519150601f19603f3d011682016040523d82523d6000602084013e6128c1565b606091505b50915091508180156128d4575080516020145b80156128f057506128ec81600063ffffffff61339c16565b6001145b6128fb57600061259d565b600019955050505050611e2e565b6001600160e01b0319811663619ce88560e11b141561292c576000199150611e2e565b6001600160e01b0319811663dc1600f360e01b1415611e2e5760008061295185611527565b50925092505061295f6139ae565b6001600160a01b0316826001600160a01b031614801561298c57506005546001600160a01b038281169116145b15612aa957600554604051606091636eb1769f60e11b916129bd918a916001600160a01b039091169060240161554f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050600060606129fd6139c6565b6001600160a01b031683604051612a14919061551f565b600060405180830381855afa9150503d8060008114612a4f576040519150601f19603f3d011682016040523d82523d6000602084013e612a54565b606091505b50915091506000828015612a69575081516020145b612a74576000612a85565b612a8582600063ffffffff61339c16565b90506000198114612a9e57612a99816139de565b612aa2565b6000195b9750505050505b50505092915050565b6000612abc6140d7565b612b0f8584600660009054906101000a90046001600160a01b03166001600160a01b0316631ce4c78b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561163a57600080fd5b60408051600480825260a0820190925291925060609190816020015b6060815260200190600190039081612b2b57505060408051600480825260a082019092529192506060919060208201608080388339505060408051600480825260a08201909252929350606092915060208201608080388339505060408051600480825260a0820190925292935060609291506020820160808038833901905050905088610160015184600081518110612bc157fe5b60200260200101819052508783600081518110612bda57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050886000015182600081518110612c0c57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508681600081518110612c3a57fe5b60200260200101818152505088610140015184600181518110612c5957fe5b6020026020010181905250886000015183600181518110612c7657fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508782600181518110612ca457fe5b60200260200101906001600160a01b031690816001600160a01b031681525050846000015181600181518110612cd657fe5b602002602001018181525050886101a0015184600281518110612cf557fe5b60200260200101819052508783600281518110612d0e57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050886040015182600281518110612d4057fe5b60200260200101906001600160a01b031690816001600160a01b031681525050846060015181600281518110612d7257fe5b60200260200101818152505088610180015184600381518110612d9157fe5b6020026020010181905250886000015183600381518110612dae57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050886040015182600381518110612de057fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084604001518160038151811061183f57fe5b6040516060906394cfcdd760e01b9061211d90859085906024016157b5565b6000612e43828263ffffffff61333516565b90506001600160e01b03198116630f47261b60e41b1480612e7457506001600160e01b0319811663012b8bc960e11b145b80612e8f57506001600160e01b0319811663a7cb5fb760e01b145b80612eaa57506001600160e01b031981166394cfcdd760e01b145b80612ec557506001600160e01b0319811663619ce88560e11b145b610c7e5760405162461bcd60e51b815260040161083390615cc9565b606080606060008551905080604051908082528060200260200182016040528015612f2657816020015b612f13614106565b815260200190600190039081612f0b5790505b50935080604051908082528060200260200182016040528015612f53578160200160208202803883390190505b50925080604051908082528060200260200182016040528015612f80578160200160208202803883390190505b50915060005b81811461301057612fbd878281518110612f9c57fe5b6020026020010151878381518110612fb057fe5b6020026020010151613032565b8751889085908110612fcb57fe5b60200260200101878581518110612fde57fe5b60200260200101878681518110612ff157fe5b9315156020948502919091019093019290925291905252600101612f86565b50509250925092565b606080613026848461236a565b91506108818484610ba9565b61303a614106565b600654604051639d3fa4b960e01b815260009182916001600160a01b0390911690639d3fa4b99061306f908890600401615d15565b60606040518083038186803b15801561308757600080fd5b505afa15801561309b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130bf9190810190614ed4565b855160065460405163a12dcc6f60e01b815292955090916001600160a01b039091169063a12dcc6f906130f89089908990600401615d28565b60206040518083038186803b15801561311057600080fd5b505afa158015613124573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506131489190810190614d1a565b9150600061315b828861014001516108e7565b60a088015160c08901516101808a01516101408b01519394509192909160009161318a9163ffffffff613c1716565b156131b7576131b0846131aa848d60800151613c3c90919063ffffffff16565b85613c58565b9050613210565b816131cb576131b0848b6080015185613c58565b60006131dc868c61018001516108e7565b905060006131ef868d6080015187613c58565b905060006131fe838688613c58565b905061320a82826133b3565b93505050505b61323061322a896040015185613c7a90919063ffffffff16565b826133b3565b965060046132438b8c602001518a6115dd565b600481111561324e57fe5b1461325a57600061325c565b865b965050505050509250925092565b600080600061327b846107a0613c99565b600061329460048651876132f29092919063ffffffff16565b8060200190516108c791908101906151f9565b63fdb6ca8d60e01b90565b60006132bf836000613335565b90506001600160e01b0319808216908316146132ed5760405162461bcd60e51b815260040161083390615ca3565b505050565b6060818311156133105761331061330b60008585613ca4565b613cc3565b83518211156133295761332961330b6001848751613ca4565b50819003910190815290565b600081600401835110156133565761335661330b6003855185600401613ca4565b5001602001516001600160e01b03191690565b6000816014018351101561338a5761338a61330b6004855185601401613ca4565b5001601401516001600160a01b031690565b6000610cd98383613ccb565b6318e4b14160e01b90565b60008183106133c25781610cd9565b5090919050565b634678472b60e01b90565b63b6555d6f60e01b90565b6324410cd360e11b90565b631b8388f760e01b90565b630e94a7ed60e41b90565b634ad3127560e01b90565b6060818311156134245761342461330b60008585613ca4565b835182111561343d5761343d61330b6001848751613ca4565b8282036040519080825280601f01601f19166020018201604052801561346a576020820181803883390190505b509050610cd961347982613cf5565b8461348387613cf5565b018351613cfb565b60608060606134a7600485518661340b9092919063ffffffff16565b8060200190516109499190810190614bc5565b60408051600180825281830190925260609182918291816020015b6134dd614044565b8152602001906001900390816134d55750506040805160018082528183019092529194506020808301908038833901905050604080516001808252818301909252919350816020015b6060815260200190600190039081613526575050845190915061355390859060049063ffffffff61340b16565b80602001905161356691908101906150ab565b8560008151811061357357fe5b602002602001018560008151811061358757fe5b602002602001018560008151811061359b57fe5b6020908102919091010192909252919052529193909250565b6040805160018082528183019092526060918291829160208083019080388339505085519193506135f09186915060049063ffffffff61340b16565b8060200190516136039190810190614c3e565b8451859060009061361057fe5b60209081029190910101919091529095929450925050565b628e3db960e51b90565b61363a6140d7565b6020810184905260a08501516080860151613656918691613da0565b815260a085015160c086015161366d918691613da0565b604082015260a085015160e0860151613687918691613da0565b606082015261369c828463ffffffff613dd416565b6080820152949350505050565b60405160009060609063b04fbddd60e01b906136cf908890889088908890602401615664565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260065491519092506060916001600160a01b03169061372190849061551f565b6000604051808303816000865af19150503d806000811461375e576040519150601f19603f3d011682016040523d82523d6000602084013e613763565b606091505b5091506000905061377a828263ffffffff61333516565b90506137846133df565b6001600160e01b0319828116911614156137c15760006137a383610998565b5091505060ff811660048111156137b657fe5b9450505050506118bb565b6137c96133c9565b6001600160e01b0319828116911614156137fc5760006137e88361090f565b509091505060ff811660048111156137b657fe5b815160208301207ff43f26ea5a94b478394a975e856464913dc1a8a1ca70939d974aa7c238aa0ce0141561383657600493505050506118bb565b60405162461bcd60e51b815260040161083390615c18565b8351602094850120835193850193909320604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815295860194909452928401929092526060830152608082015260a0902090565b6000610cd9826138b485613e05565b613e80565b6350ae068360e11b90565b6040516000906060906370a0823160e01b906138e490859060240161553b565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060856001600160a01b031683604051613935919061551f565b600060405180830381855afa9150503d8060008114613970576040519150601f19603f3d011682016040523d82523d6000602084013e613975565b606091505b5091509150818015613988575080516020145b6139935760006139a4565b6139a481600063ffffffff61339c16565b9695505050505050565b736b175474e89094c44da98b954eedeac495271d0f90565b7306af07097c9eeb7fd685c692751d5c66db49c21590565b6000806139e96139c6565b6001600160a01b0316634ba2363a6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613a2357600080fd5b505af1158015613a37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613a5b9190810190614eb8565b90506000816001600160a01b03166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613a9a57600080fd5b505af1158015613aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613ad291908101906151b4565b4211613b5057816001600160a01b031663c92aecc46040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613b1357600080fd5b505af1158015613b27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613b4b91908101906151b4565b613bc3565b816001600160a01b0316639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613b8b57600080fd5b505af1158015613b9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613bc391908101906151b4565b90506118bb816b033b2e3c9fd0803ce800000086613c58565b630fcb446360e31b90565b6000610cd9826138b485613e9f565b635bd0428d60e01b90565b6320d11f6160e01b90565b633d66146160e21b90565b600081518351148015610cd95750508051602091820120825192909101919091201490565b600082820183811015610cd957610cd961330b60008686613f58565b60006118bb83613c6e868563ffffffff613dd416565b9063ffffffff613f7716565b600082821115613c9357613c9361330b60028585613f58565b50900390565b631ca78ed960e31b90565b6060632800659560e01b848484604051602401610ca493929190615b19565b805160208201fd5b60008160200183511015613cec57613cec61330b6005855185602001613ca4565b50016020015190565b60200190565b6020811015613d25576001816020036101000a0380198351168185511680821786525050506132ed565b82821415613d32576132ed565b82821115613d6c5760208103905080820181840181515b82851015613d64578451865260209586019590940193613d49565b9052506132ed565b60208103905080820181840183515b81861215613d975782518252601f199283019290910190613d7b565b85525050505050565b6000613dad848484613fa1565b15613dc057613dc061330b858585614007565b6118bb83613c6e868563ffffffff613dd416565b600082613de357506000610909565b82820282848281613df057fe5b0414610cd957610cd961330b60018686613f58565b608081810151825160208085015160408087015160609788015186519685019690962082517fec69816980a3a3ca4554410e60253953e9ff375ba4536a98adfa15cc7154150881529485019590955290830191909152948101949094526001600160a01b039091169183019190915260a082015260c0902090565b60405161190160f01b8152600281019290925260228201526042902090565b6101408101516101608201516101808301516101a08401516000937ff80322eb8376aafb64eadf8f0d7623f22130fd9491a221e902b713cb984a753493909290916020871015613eeb57fe5b601f1987018051610140890180516101608b0180516101808d0180516101a08f0180519d89528c5160209d8e012087528b519b8d019b909b2084528951998c01999099208152875197909a019690962088526101e085209390945290529190529252919091529050919050565b606063e946c1bb60e01b848484604051602401610ca493929190615aa5565b600081613f8d57613f8d61330b60038585613f58565b6000828481613f9857fe5b04949350505050565b600082613fb357613fb361330b614026565b811580613fbe575083155b15613fcb57506000610cd9565b60008380613fd557fe5b8584099050613fea858463ffffffff613dd416565b613ffc826103e863ffffffff613dd416565b101595945050505050565b606063339f3de260e01b848484604051602401610ca493929190615d4d565b60408051808201909152600481526329e460df60e21b602082015290565b604051806101c0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6040805160608101909152806000815260006020820181905260409091015290565b803561090981615e3b565b805161090981615e3b565b600082601f83011261414e578081fd5b813561416161415c82615d89565b615d63565b81815291506020808301908481018184028601820187101561418257600080fd5b60005b84811015611e2957813561419881615e3b565b84529282019290820190600101614185565b600082601f8301126141ba578081fd5b81516141c861415c82615d89565b8181529150602080830190840160005b83811015614205576141f0876020845189010161442a565b835260209283019291909101906001016141d8565b5050505092915050565b600082601f83011261421f578081fd5b813561422d61415c82615d89565b8181529150602080830190840160005b838110156142055761425587602084358901016143dc565b8352602092830192919091019060010161423d565b600082601f83011261427a578081fd5b815161428861415c82615d89565b8181529150602080830190840160005b83811015614205576142b087602084518901016145be565b83526020928301929190910190600101614298565b600082601f8301126142d5578081fd5b81356142e361415c82615d89565b8181529150602080830190840160005b838110156142055761430b8760208435890101614470565b835260209283019291909101906001016142f3565b600082601f830112614330578081fd5b815161433e61415c82615d89565b81815291506020808301908481018184028601820187101561435f57600080fd5b60005b84811015611e2957815184529282019290820190600101614362565b600082601f83011261438e578081fd5b813561439c61415c82615d89565b8181529150602080830190848101818402860182018710156143bd57600080fd5b60005b84811015611e29578135845292820192908201906001016143c0565b600082601f8301126143ec578081fd5b81356143fa61415c82615da8565b915080825283602082850101111561441157600080fd5b8060208401602084013760009082016020015292915050565b600082601f83011261443a578081fd5b815161444861415c82615da8565b915080825283602082850101111561445f57600080fd5b611e2e816020840160208601615dd6565b60006101c0808385031215614483578182fd5b61448c81615d63565b9150506144998383614128565b81526144a88360208401614128565b60208201526144ba8360408401614128565b60408201526144cc8360608401614128565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100808301358183015250610120808301358183015250610140808301356001600160401b038082111561452d57600080fd5b614539868387016143dc565b8385015261016092508285013591508082111561455557600080fd5b614561868387016143dc565b8385015261018092508285013591508082111561457d57600080fd5b614589868387016143dc565b838501526101a09250828501359150808211156145a557600080fd5b506145b2858286016143dc565b82840152505092915050565b60006101c08083850312156145d1578182fd5b6145da81615d63565b9150506145e78383614133565b81526145f68360208401614133565b60208201526146088360408401614133565b604082015261461a8360608401614133565b60608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e0820152610100808301518183015250610120808301518183015250610140808301516001600160401b038082111561467b57600080fd5b6146878683870161442a565b838501526101609250828501519150808211156146a357600080fd5b6146af8683870161442a565b838501526101809250828501519150808211156146cb57600080fd5b6146d78683870161442a565b838501526101a09250828501519150808211156146f357600080fd5b506145b28582860161442a565b805160ff8116811461090957600080fd5b600060208284031215614722578081fd5b8135610cd981615e3b565b6000806040838503121561473f578081fd5b825161474a81615e3b565b602084015190925061475b81615e3b565b809150509250929050565b60008060006060848603121561477a578081fd5b835161478581615e3b565b602085015190935061479681615e3b565b60408501519092506001600160401b038111156147b1578182fd5b6147bd8682870161442a565b9150509250925092565b6000806000606084860312156147db578081fd5b83516147e681615e3b565b60208501519093506147f781615e3b565b80925050604084015190509250925092565b60008060006060848603121561481d578081fd5b835161482881615e3b565b60208501519093506001600160401b03811115614843578182fd5b61484f8682870161442a565b925050604084015190509250925092565b60008060008060808587031215614875578182fd5b845161488081615e3b565b60208601519094506001600160401b038082111561489c578384fd5b6148a88883890161442a565b945060408701519150808211156148bd578384fd5b6148c98883890161442a565b935060608701519150808211156148de578283fd5b506148eb8782880161442a565b91505092959194509250565b60008060408385031215614909578182fd5b823561491481615e3b565b915060208301356001600160401b0381111561492e578182fd5b61493a8582860161420f565b9150509250929050565b60008060008060808587031215614959578182fd5b843561496481615e3b565b935060208501356001600160401b038082111561497f578384fd5b61498b8883890161437e565b945060408701359150808211156149a0578384fd5b6149ac8883890161437e565b935060608701359150808211156149c1578283fd5b506148eb878288016143dc565b600080604083850312156149e0578182fd5b82356149eb81615e3b565b915060208301356001600160401b03811115614a05578182fd5b61493a858286016143dc565b600080600060608486031215614a25578081fd5b8335614a3081615e3b565b925060208401356001600160401b03811115614a4a578182fd5b614a56868287016143dc565b925050604084013590509250925092565b60008060408385031215614a79578182fd5b8235614a8481615e3b565b946020939093013593505050565b600060208284031215614aa3578081fd5b81356001600160401b03811115614ab8578182fd5b6118bb8482850161413e565b600060208284031215614ad5578081fd5b81516001600160401b03811115614aea578182fd5b6118bb8482850161426a565b600080600060608486031215614b0a578081fd5b83356001600160401b0380821115614b20578283fd5b614b2c878388016142c5565b94506020860135915080821115614b41578283fd5b614b4d8783880161413e565b93506040860135915080821115614b62578283fd5b506147bd8682870161437e565b60008060408385031215614b81578182fd5b82356001600160401b0380821115614b97578384fd5b614ba3868387016142c5565b93506020850135915080821115614bb8578283fd5b5061493a8582860161420f565b600080600060608486031215614bd9578081fd5b83516001600160401b0380821115614bef578283fd5b614bfb8783880161426a565b94506020860151915080821115614c10578283fd5b614c1c87838801614320565b93506040860151915080821115614c31578283fd5b506147bd868287016141aa565b600080600060608486031215614c52578081fd5b83516001600160401b0380821115614c68578283fd5b614c748783880161426a565b9450602086015193506040860151915080821115614c31578283fd5b60008060408385031215614ca2578182fd5b82356001600160401b0380821115614cb8578384fd5b614ba38683870161437e565b60008060408385031215614cd6578182fd5b82516001600160401b0380821115614cec578384fd5b614cf886838701614320565b93506020850151915080821115614d0d578283fd5b5061493a858286016141aa565b600060208284031215614d2b578081fd5b81518015158114610cd9578182fd5b60008060008060808587031215614d4f578182fd5b845193506020850151614d6181615e3b565b60408601519093506001600160401b03808211156148bd578384fd5b60008060408385031215614d8f578182fd5b505080516020909101519092909150565b60008060408385031215614db2578182fd5b8251915060208301516001600160401b03811115614dce578182fd5b61493a8582860161442a565b600080600060608486031215614dee578081fd5b8351925060208401516001600160401b0380821115614e0b578283fd5b614e178783880161442a565b93506040860151915080821115614e2c578283fd5b506147bd8682870161442a565b60008060408385031215614e4b578182fd5b82519150602083015161475b81615e50565b60008060408385031215614e6f578182fd5b82516001600160e01b03198116811461474a578283fd5b600060208284031215614e97578081fd5b81356001600160401b03811115614eac578182fd5b6118bb848285016143dc565b600060208284031215614ec9578081fd5b8151610cd981615e3b565b600060608284031215614ee5578081fd5b614eef6060615d63565b825160078110614efd578283fd5b8152602083810151908201526040928301519281019290925250919050565b600060208284031215614f2d578081fd5b81516001600160401b03811115614f42578182fd5b6118bb848285016145be565b600080600060608486031215614f62578081fd5b83356001600160401b03811115614f77578182fd5b614f8386828701614470565b9350506020840135614f9481615e3b565b929592945050506040919091013590565b60008060408385031215614fb7578182fd5b82356001600160401b0380821115614fcd578384fd5b614fd986838701614470565b93506020850135915080821115614fee578283fd5b5061493a858286016143dc565b60008060006060848603121561500f578081fd5b83356001600160401b03811115615024578182fd5b61503086828701614470565b93505060208401359150604084013561504881615e3b565b809150509250925092565b60008060008060808587031215615068578182fd5b84516001600160401b038082111561507e578384fd5b61508a888389016145be565b9550602087015191508082111561509f578384fd5b6148a8888389016145be565b6000806000606084860312156150bf578081fd5b83516001600160401b03808211156150d5578283fd5b6150e1878388016145be565b9450602086015193506040860151915080821115614e2c578283fd5b600080600060608486031215615111578081fd5b83356001600160401b0380821115615127578283fd5b81860160a08189031215615139578384fd5b61514360a0615d63565b925080358352602081013560208401526040810135604084015261516a8860608301614128565b6060840152608081013582811115615180578485fd5b61518c898284016143dc565b6080850152509194505050602084013591506151ab8560408601614128565b90509250925092565b6000602082840312156151c5578081fd5b5051919050565b600080604083850312156151de578182fd5b82516151e981615e50565b6020939093015192949293505050565b60008060006060848603121561520d578081fd5b835161521881615e50565b60208501516040860151919450925061504881615e3b565b60008060008060808587031215615245578182fd5b61524f8686614700565b935060208501519250604085015161526681615e3b565b60608601519092506001600160401b03811115615281578182fd5b6148eb8782880161442a565b6000806000606084860312156152a1578081fd5b6152ab8585614700565b92506020840151915060408401516001600160401b038111156147b1578182fd5b6000806000606084860312156152e0578081fd5b6152ea8585614700565b925060208401519150604084015190509250925092565b6001600160a01b03169052565b6000815180845260208401935060208301825b828110156153485781516001600160a01b0316865260209586019590910190600101615321565b5093949350505050565b600081518084526020840180819550602083028101915060208501845b8481101561539d5782840388526153878483516153da565b602098890198909450919091019060010161536f565b50919695505050505050565b6000815180845260208401935060208301825b828110156153485781518652602095860195909101906001016153bc565b600081518084526153f2816020860160208601615dd6565b601f01601f19169290920160200192915050565b805161541181615e27565b825260208181015190830152604090810151910152565b60006101c0615438848451615301565b602083015161544a6020860182615301565b50604083015161545d6040860182615301565b5060608301516154706060860182615301565b506080830151608085015260a083015160a085015260c083015160c085015260e083015160e08501526101008084015181860152506101208084015181860152506101408084015182828701526154c9838701826153da565b915050610160915081840151858203838701526154e682826153da565b92505050610180808401518583038287015261550283826153da565b9150506101a0915081840151858203838701526139a482826153da565b60008251615531818460208701615dd6565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03851681526080602082018190526000906155b1908301866153a9565b82810360408401526155c381866153a9565b83810360608501526155d581866153da565b98975050505050505050565b6001600160a01b0384168152606060208201819052600090615605908301856153da565b9050826040830152949350505050565b6001600160a01b0385168152608060208201819052600090615639908301866153da565b82810360408401526155c381866153da565b6001600160a01b03929092168252602082015260400190565b6000608082526156776080830187615352565b8281036020840152615689818761530e565b838103604085015261569b818761530e565b91505082810360608401526156b081856153a9565b979650505050505050565b602080825282518282018190526000918401906040840190835b818110156156fc5783516156e881615e31565b8352602093840193909201916001016156d5565b509095945050505050565b606080825284519082018190526000906020906080840190828801845b8281101561574a57615737848351615406565b6060939093019290840190600101615724565b5050508381038285015261575e81876153a9565b84810360408601528551808252908301915082860190845b81811015615794578251151584529284019291840191600101615776565b509198975050505050505050565b600060208252610cd960208301846153a9565b6000604082526157c860408301856153a9565b82810360208401526157da8185615352565b95945050505050565b6000604082526157f660408301856153a9565b82810360208401526157da81856153a9565b90815260200190565b8481526001600160a01b038416602082015260806040820181905260009061583b908301856153da565b82810360608401526156b081856153da565b918252602082015260400190565b6000838252604060208301526118bb60408301846153da565b60008482526060602083015261588d60608301856153da565b82810360408401526139a481856153da565b828152604081016158af83615e27565b8260208301529392505050565b6001600160e01b031991909116815260200190565b6001600160e01b03199290921682526001600160a01b0316602082015260400190565b6001600160e01b0319851681526001600160a01b038481166020830152831660408201526080606082018190526000906139a4908301846153da565b6001600160e01b0319861681526001600160a01b038516602082015260a060408201819052600090615964908301866153a9565b828103606084015261597681866153a9565b838103608085015261185781866153da565b6001600160e01b0319851681526001600160a01b03841660208201526080604082018190526000906159bc908301856153da565b905082606083015295945050505050565b6001600160e01b03199390931683526001600160a01b03919091166020830152604082015260600190565b600063ffffffff60e01b8516825260606020830152615a1a60608301856153a9565b82810360408401526139a48185615352565b600060208252610cd960208301846153da565b600060808252615a5260808301876153da565b6001600160a01b03958616602084015293909416604082015260ff9190911660609091015292915050565b6000615a8885615e06565b848252836020830152606060408301526157da60608301846153da565b60608101615ab285615e13565b938152602081019290925260409091015290565b60608101615ad385615e1d565b93815260208101929092526001600160a01b031660409091015290565b60408101615afd84615dcb565b82528260208301529392505050565b60608101615ab285615e1d565b6060810160088510615ab257fe5b6020810160058310615b3557fe5b91905290565b6000615b4686615e27565b858252602082018590526001600160a01b03841660408301526080606083018190526139a4908301846153da565b60408101615b8184615e06565b9281526020015290565b600060808252615b9e60808301876153da565b602083820381850152818751808452828401915082838202850101838a01865b83811015615bec57601f19878403018552615bda838351615428565b94860194925090850190600101615bbe565b50508681036040880152615c00818a6153a9565b94505050505082810360608401526156b08185615352565b602080825260139082015272554e4b4e4f574e5f52455455524e5f4441544160681b604082015260600190565b60208082526019908201527f554e4b4e4f574e5f46554e4354494f4e5f53454c4543544f5200000000000000604082015260600190565b6020808252600d908201526c15539253541311535153951151609a1b604082015260600190565b6020808252600c908201526b2120a22fa9a2a622a1aa27a960a11b604082015260600190565b6020808252600e908201526d15d493d391d7d41493d61657d25160921b604082015260600190565b60a08101615cff8286615406565b8360608301528215156080830152949350505050565b600060208252610cd96020830184615428565b600060408252615d3b6040830185615428565b82810360208401526157da81856153da565b9283526020830191909152604082015260600190565b6040518181016001600160401b0381118282101715615d8157600080fd5b604052919050565b60006001600160401b03821115615d9e578081fd5b5060209081020190565b60006001600160401b03821115615dbd578081fd5b50601f01601f191660200190565b8060048110610c7e57fe5b60005b83811015615df1578181015183820152602001615dd9565b83811115615e00576000848401525b50505050565b60028110615e1057fe5b50565b60048110615e1057fe5b60038110615e1057fe5b60078110615e1057fe5b60058110615e1057fe5b6001600160a01b0381168114615e1057600080fd5b60ff81168114615e1057600080fdfea365627a7a723158204a2b7e0b627f8569a96330223d15388afdd2cd939cdc1d7d132b077a94196b316c6578706572696d656e74616cf564736f6c63430005100040"
            },
            "deployedBytecode": {
                "object": "0x608060405234801561001057600080fd5b506004361061027f5760003560e01c80638f4ce4791161015c578063c26cfecd116100ce578063d3d862d111610087578063d3d862d1146106d7578063d4695028146106ea578063e25cabf71461070a578063e4e6e7da1461072c578063e77286eb1461074d578063ee4f5a941461076f5761027f565b8063c26cfecd14610652578063ca49f47c1461065a578063cafd3a071461067d578063d001c5dc1461069e578063d186037f146106b1578063d3637905146106c45761027f565b8063a5cd62ba11610120578063a5cd62ba146105a6578063a6627e9f146105c6578063acaedc74146105d9578063b43cffe1146105fc578063bbb2dcf61461060f578063bc03f964146106315761027f565b80638f4ce479146105265780639a7e7526146105395780639eadc8351461055c578063a070cac814610580578063a0901e51146105935761027f565b80634dfdac20116101f5578063750bdb30116101b9578063750bdb301461047b5780637914b2ec1461049e5780637982653e146104bf57806379c9c426146104df5780637b66ad34146104f25780637d727512146105135761027f565b80634dfdac20146103e3578063590aa8751461040357806363eb39921461042357806365129042146104365780636f83188e146104585761027f565b8063314853ff11610247578063314853ff14610333578063327d30541461035557806332aae3ad146103685780633db6dc611461038a578063459be5e2146103ad57806346eb65cb146103ce5761027f565b806302d0aec31461028457806304a5618a146102ae5780630d7b7d76146102d0578063165979e1146102f15780632322cf7614610313575b600080fd5b610297610292366004614e86565b610791565b6040516102a592919061589f565b60405180910390f35b6102c16102bc366004614e86565b6107ed565b6040516102a5939291906159cd565b6102e36102de3660046149ce565b610868565b6040516102a592919061584d565b6103046102ff366004614e86565b61088a565b6040516102a593929190615b0c565b6103266103213660046149ce565b6108e7565b6040516102a59190615808565b610346610341366004614e86565b61090f565b6040516102a593929190615874565b6102e3610363366004614e86565b610956565b61037b610376366004614e86565b610998565b6040516102a593929190615a7d565b61039d610398366004614e86565b6109eb565b6040516102a59493929190615811565b6103c06103bb366004614e86565b610a35565b6040516102a5929190615af0565b6103e16103dc366004614e86565b610a8b565b005b6103f66103f13660046148f7565b610ba9565b6040516102a591906157a2565b610416610411366004614711565b610c2c565b6040516102a59190615a2c565b610416610431366004614a11565b610c83565b610449610444366004614e86565b610ce0565b6040516102a593929190615569565b61046b610466366004614e86565b610d1a565b6040516102a59493929190615b8b565b61048e610489366004614e86565b611527565b6040516102a594939291906158f4565b6104b16104ac366004614e86565b6115a5565b6040516102a59291906158d1565b6104d26104cd366004614f4e565b6115dd565b6040516102a59190615b27565b6103266104ed3660046150fd565b611864565b610505610500366004614e86565b6118c3565b6040516102a592919061554f565b6103266105213660046149ce565b6118fb565b6104b1610534366004614e86565b611e35565b61054c610547366004614e86565b611e92565b6040516102a59493929190615b3b565b61056f61056a366004614e86565b611ef3565b6040516102a5959493929190615930565b61032661058e366004614ffb565b611f6b565b6103f66105a1366004614a92565b611fc2565b6105b96105b4366004614af6565b61203b565b6040516102a591906156bb565b6104166105d4366004614a67565b6120fe565b6105ec6105e7366004614e86565b612157565b6040516102a59493929190615615565b61041661060a366004614944565b612193565b61062261061d366004614e86565b6121f2565b6040516102a5939291906159f8565b61064461063f366004614e86565b61226c565b6040516102a592919061585b565b6103266122a5565b61066d610668366004614e86565b6122ab565b6040516102a59493929190615988565b61069061068b366004614e86565b61231c565b6040516102a5929190615b74565b6103f66106ac3660046148f7565b61236a565b6103266106bf3660046149ce565b6123d8565b6104d26106d2366004614f4e565b612ab2565b6104166106e5366004614c90565b612e12565b6106fd6106f8366004614e86565b612e31565b6040516102a591906158bc565b61071d610718366004614b6f565b612ee1565b6040516102a593929190615707565b61073f61073a3660046148f7565b613019565b6040516102a59291906157e3565b61076061075b366004614fa5565b613032565b6040516102a593929190615cf1565b61078261077d366004614e86565b61326a565b6040516102a593929190615ac6565b6000806107a5836107a06132a7565b6132b2565b60006107be60048551866132f29092919063ffffffff16565b8060200190516107d19190810190614e39565b909350905060ff811660068111156107e557fe5b915050915091565b60008080610801848263ffffffff61333516565b92506001600160e01b0319831663012b8bc960e11b1461083c5760405162461bcd60e51b815260040161083390615cc9565b60405180910390fd5b61084d84601063ffffffff61336916565b915061086084602463ffffffff61339c16565b929491935050565b60008061087584846118fb565b915061088184846123d8565b90509250929050565b600080600061089b846107a06133a8565b60006108b460048651876132f29092919063ffffffff16565b8060200190516108c791908101906152cc565b9094509250905060ff811660028111156108dd57fe5b9350509193909250565b60008060006108f68585610868565b9150915061090482826133b3565b925050505b92915050565b6000606080610920846107a06133c9565b835161093690859060049063ffffffff6132f216565b8060200190516109499190810190614dda565b9196909550909350915050565b600080610965836107a06133d4565b825161097b90849060049063ffffffff6132f216565b80602001905161098e9190810190614d7d565b9094909350915050565b60008060606109a9846107a06133df565b60006109c260048651876132f29092919063ffffffff16565b8060200190516109d5919081019061528d565b9094509250905060ff811660018111156108dd57fe5b6000806060806109fd856107a06133ea565b8451610a1390869060049063ffffffff6132f216565b806020019051610a269190810190614d3a565b92989197509550909350915050565b600080610a44836107a06133f5565b6000610a5d60048551866132f29092919063ffffffff16565b806020019051610a7091908101906151cc565b9250905060ff81166003811115610a8357fe5b925050915091565b6000610a9d828263ffffffff61333516565b90506001600160e01b03198116630f47261b60e41b1415610ac857610ac182611e35565b5050610ba5565b6001600160e01b0319811663012b8bc960e11b1415610af257610aea826107ed565b505050610ba5565b6001600160e01b0319811663a7cb5fb760e01b1415610b1e57610b1482611ef3565b5050505050610ba5565b6001600160e01b031981166394cfcdd760e01b1415610b4057610aea826121f2565b6001600160e01b0319811663619ce88560e11b1415610b6b57610b62826122ab565b50505050610ba5565b6001600160e01b0319811663dc1600f360e01b1415610b8d57610b6282611527565b60405162461bcd60e51b815260040161083390615cc9565b5050565b606060008251905080604051908082528060200260200182016040528015610bdb578160200160208202803883390190505b50915060005b818114610c2457610c0585858381518110610bf857fe5b60200260200101516123d8565b838281518110610c1157fe5b6020908102919091010152600101610be1565b505092915050565b604051606090630f47261b60e41b90610c4990849060240161553b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290505b919050565b60405160609063619ce88560e11b90610ca4908690869086906024016155e1565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290505b9392505050565b6000806000610cf1846107a0613400565b8351610d0790859060049063ffffffff6132f216565b80602001905161094991908101906147c7565b60608080806000610d31868263ffffffff61333516565b90506001600160e01b0319811663dedfc1f160e01b1415610d7d5760405180604001604052806011815260200170626174636843616e63656c4f726465727360781b8152509450611129565b6001600160e01b03198116634b4a520160e11b1415610dc5576040518060400160405280600f81526020016e626174636846696c6c4f726465727360881b8152509450611129565b6001600160e01b031981166323aa37f960e21b1415610e145760405180604001604052806016815260200175626174636846696c6c4f72646572734e6f5468726f7760501b8152509450611129565b6001600160e01b03198116632fbb8b8560e21b1415610e625760405180604001604052806015815260200174626174636846696c6c4f724b696c6c4f726465727360581b8152509450611129565b6001600160e01b03198116632da6298760e01b1415610ea6576040518060400160405280600b81526020016a31b0b731b2b627b93232b960a91b8152509450611129565b6001600160e01b03198116634da26aab60e11b1415610ee857604051806040016040528060098152602001683334b63627b93232b960b91b8152509450611129565b6001600160e01b03198116633852d63160e21b1415610f30576040518060400160405280600f81526020016e3334b63627b925b4b63627b93232b960891b8152509450611129565b6001600160e01b031981166378d29ac160e01b1415610f7f57604051806040016040528060168152602001756d61726b65744275794f72646572734e6f5468726f7760501b8152509450611129565b6001600160e01b0319811663369da09960e01b1415610fd5576040518060400160405280601781526020017f6d61726b657453656c6c4f72646572734e6f5468726f770000000000000000008152509450611129565b6001600160e01b03198116638bc8efb360e01b141561102b576040518060400160405280601981526020017f6d61726b65744275794f726465727346696c6c4f724b696c6c000000000000008152509450611129565b6001600160e01b0319811663a6c3bf3360e01b1415611081576040518060400160405280601a81526020017f6d61726b657453656c6c4f726465727346696c6c4f724b696c6c0000000000008152509450611129565b6001600160e01b031981166388ec79fb60e01b14156110c5576040518060400160405280600b81526020016a6d617463684f726465727360a81b8152509450611129565b6001600160e01b03198116634f9559b160e01b14806110f457506001600160e01b031981166302280c9160e41b145b156111115760405162461bcd60e51b815260040161083390615c7c565b60405162461bcd60e51b815260040161083390615c45565b6001600160e01b0319811663dedfc1f160e01b14156111b557855161115890879060049063ffffffff61340b16565b80602001905161116b9190810190614ac4565b604080516000808252602082019092529195505b50604080516000808252602082019092529194506111ad565b60608152602001906001900390816111985790505b50915061151f565b6001600160e01b03198116632fbb8b8560e21b14806111e457506001600160e01b03198116634b4a520160e11b145b806111ff57506001600160e01b031981166323aa37f960e21b145b156112195761120d8661348b565b9195509350915061151f565b6001600160e01b03198116632da6298760e01b14156112e85760408051600180825281830190925290816020015b61124f614044565b815260200190600190039081611247575050865190945061127a90879060049063ffffffff61340b16565b80602001905161128d9190810190614f1c565b8460008151811061129a57fe5b6020026020010181905250600060405190808252806020026020018201604052801561117f5781602001602082028038833901905050604080516000808252602082019092529194506111ad565b6001600160e01b03198116633852d63160e21b148061131757506001600160e01b03198116634da26aab60e11b145b156113255761120d866134ba565b6001600160e01b031981166378d29ac160e01b148061135457506001600160e01b0319811663369da09960e01b145b8061136f57506001600160e01b03198116638bc8efb360e01b145b8061138a57506001600160e01b0319811663a6c3bf3360e01b145b156113985761120d866135b4565b6001600160e01b031981166388ec79fb60e01b141561151f576113b9614044565b6113c1614044565b6060806113db60048b518c61340b9092919063ffffffff16565b8060200190516113ee9190810190615053565b604080516002808252606082019092529498509296509094509250816020015b611416614044565b81526020019060019003908161140e579050509750838860008151811061143957fe5b6020026020010181905250828860018151811061145257fe5b602090810291909101015260408051600280825260608201909252908160200160208202803883390190505096508360a001518760008151811061149257fe5b6020026020010181815250508260a00151876001815181106114b057fe5b60209081029190910101526040805160028082526060820190925290816020015b60608152602001906001900390816114d157905050955081866000815181106114f657fe5b6020026020010181905250808660018151811061150f57fe5b6020026020010181905250505050505b509193509193565b60008080606061153d858363ffffffff61333516565b93506001600160e01b0319841663dc1600f360e01b1461156f5760405162461bcd60e51b815260040161083390615cc9565b845161158590869060049063ffffffff61340b16565b8060200190516115989190810190614766565b9597919650949350915050565b6000806115b4836107a0613628565b82516115ca90849060049063ffffffff6132f216565b80602001905161098e9190810190614e5d565b60006115e76140d7565b6116788584600660009054906101000a90046001600160a01b03166001600160a01b0316631ce4c78b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561163a57600080fd5b505afa15801561164e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061167291908101906151b4565b3a613632565b60408051600280825260608281019093529293509091816020015b606081526020019060019003908161169357505060408051600280825260608083018452939450909160208301908038833950506040805160028082526060808301845294955090925090602083019080388339505060408051600280825260608083018452949550909250906020830190803883390190505090508861014001518460008151811061172257fe5b602002602001018190525088600001518360008151811061173f57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050878260008151811061176d57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084600001518160008151811061179f57fe5b602002602001018181525050886101800151846001815181106117be57fe5b60200260200101819052508860000151836001815181106117db57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505088604001518260018151811061180d57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084604001518160018151811061183f57fe5b602002602001018181525050611857848484846136a9565b9998505050505050505050565b60006118bb846118b66040518060400160405280600b81526020016a0c1e08141c9bdd1bd8dbdb60aa1b815250604051806040016040528060058152602001640332e302e360dc1b815250878761384e565b6138a5565b949350505050565b6000806118d2836107a06138b9565b82516118e890849060049063ffffffff6132f216565b80602001905161098e919081019061472d565b60008061190e838263ffffffff61333516565b90506001600160e01b03198116630f47261b60e41b141561195057600061193c84601063ffffffff61336916565b905061194881866138c4565b925050611e2e565b6001600160e01b0319811663012b8bc960e11b1415611a8f57600080611975856107ed565b6040519194509250606091506331a9108f60e11b90611998908490602401615808565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060846001600160a01b0316836040516119e9919061551f565b600060405180830381855afa9150503d8060008114611a24576040519150601f19603f3d011682016040523d82523d6000602084013e611a29565b606091505b50915091506000828015611a3e575081516020145b611a49576000611a5a565b611a5a82600c63ffffffff61336916565b9050896001600160a01b0316816001600160a01b031614611a7c576000611a7f565b60015b60ff169750505050505050611e2e565b6001600160e01b0319811663a7cb5fb760e01b1415611c16576000606080611ab686611ef3565b5081519296509094509250905060005b818114611c0c578351606090627eeac760e11b908b90879085908110611ae857fe5b6020026020010151604051602401611b0192919061564b565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060876001600160a01b031683604051611b52919061551f565b600060405180830381855afa9150503d8060008114611b8d576040519150601f19603f3d011682016040523d82523d6000602084013e611b92565b606091505b50915091506000828015611ba7575081516020145b611bb2576000611bc3565b611bc382600063ffffffff61339c16565b90506000878681518110611bd357fe5b60200260200101518281611be357fe5b0490508b811080611bf257508b155b15611bfb57809b505b505060019093019250611ac6915050565b5050505050611e2e565b6001600160e01b0319811663619ce88560e11b1415611d0257604051606090632a17967960e21b90611c5390869060009081908190602401615a3f565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260045491519092506000916001600160a01b031690611ca590849061551f565b600060405180830381855afa9150503d8060008114611ce0576040519150601f19603f3d011682016040523d82523d6000602084013e611ce5565b606091505b5050905080611cf5576000611cf9565b6000195b93505050611e2e565b6001600160e01b0319811663dc1600f360e01b1415611d9057600080611d2785611527565b509250925050611d356139ae565b6001600160a01b0316826001600160a01b0316148015611d6257506005546001600160a01b038281169116145b15611d89576000611d7a611d746139c6565b886138c4565b9050611d85816139de565b9450505b5050611e2e565b6001600160e01b031981166394cfcdd760e01b1415611e2e57606080611db5856121f2565b80519194509250905060005b818114611e29576000611de789858481518110611dda57fe5b60200260200101516118fb565b90506000858381518110611df757fe5b60200260200101518281611e0757fe5b04905087811080611e16575087155b15611e1f578097505b5050600101611dc1565b505050505b5092915050565b600080611e48838263ffffffff61333516565b91506001600160e01b03198216630f47261b60e41b14611e7a5760405162461bcd60e51b815260040161083390615cc9565b611e8b83601063ffffffff61336916565b9050915091565b60008060006060611ea5856107a0613bdc565b6000611ebe60048751886132f29092919063ffffffff16565b806020019051611ed19190810190615230565b91965094509250905060ff81166006811115611ee957fe5b9450509193509193565b60008060608080611f0a868563ffffffff61333516565b94506001600160e01b0319851663a7cb5fb760e01b14611f3c5760405162461bcd60e51b815260040161083390615cc9565b505050506024828101516044840151606485015160848601519496929591820184019490820184019391010190565b60006118bb84611fbd6040518060400160405280600b81526020016a0c1e08141c9bdd1bd8dbdb60aa1b815250604051806040016040528060058152602001640332e302e360dc1b815250878761384e565b613be7565b6060808251604051908082528060200260200182016040528015611ff0578160200160208202803883390190505b50905060005b83518114611e2e5783818151811061200a57fe5b60200260200101516001600160a01b03163182828151811061202857fe5b6020908102919091010152600101611ff6565b60606000845190508060405190808252806020026020018201604052801561206d578160200160208202803883390190505b50915060005b8181146120f5576120be86828151811061208957fe5b602002602001015186838151811061209d57fe5b60200260200101518684815181106120b157fe5b6020026020010151612ab2565b8382815181106120ca57fe5b602002602001019060048111156120dd57fe5b908160048111156120ea57fe5b905250600101612073565b50509392505050565b60405160609063012b8bc960e11b9061211d908590859060240161564b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905092915050565b6000606080606061216a856107a0613bf6565b845161218090869060049063ffffffff6132f216565b806020019051610a269190810190614860565b60405160609063a7cb5fb760e01b906121b690879087908790879060240161558d565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050949350505050565b6000606080612207848463ffffffff61333516565b92506001600160e01b031983166394cfcdd760e01b146122395760405162461bcd60e51b815260040161083390615cc9565b835161224f90859060049063ffffffff61340b16565b8060200190516122629190810190614cc4565b9395909450915050565b6000606061227c836107a0613c01565b825161229290849060049063ffffffff6132f216565b80602001905161098e9190810190614da0565b60075481565b6000806060816122c1858263ffffffff61333516565b93506001600160e01b0319841663619ce88560e11b146122f35760405162461bcd60e51b815260040161083390615cc9565b845161230990869060049063ffffffff61340b16565b8060200190516115989190810190614809565b60008061232b836107a0613c0c565b600061234460048551866132f29092919063ffffffff16565b80602001905161235791908101906151cc565b9250905060ff81166001811115610a8357fe5b60606000825190508060405190808252806020026020018201604052801561239c578160200160208202803883390190505b50915060005b818114610c24576123b985858381518110611dda57fe5b8382815181106123c557fe5b60209081029190910101526001016123a2565b6000806123eb838263ffffffff61333516565b90506001600160e01b031981166394cfcdd760e01b141561248457606080612412856121f2565b80519194509250905060005b81811461247957600061243789858481518110610bf857fe5b9050600085838151811061244757fe5b6020026020010151828161245757fe5b04905087811080612466575087155b1561246f578097505b505060010161241e565b506109099350505050565b6001600160e01b03198116630f47261b60e41b14156125a85760006124b084601063ffffffff61336916565b600154604051919250606091636eb1769f60e11b916124dd9189916001600160a01b03169060240161554f565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060836001600160a01b03168360405161252e919061551f565b600060405180830381855afa9150503d8060008114612569576040519150601f19603f3d011682016040523d82523d6000602084013e61256e565b606091505b5091509150818015612581575080516020145b61258c57600061259d565b61259d81600063ffffffff61339c16565b955050505050611e2e565b6001600160e01b0319811663012b8bc960e11b14156127db576000806125cd856107ed565b6002546040519295509093506060925063e985e9c560e01b91612600918a916001600160a01b039091169060240161554f565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060846001600160a01b031683604051612651919061551f565b600060405180830381855afa9150503d806000811461268c576040519150601f19603f3d011682016040523d82523d6000602084013e612691565b606091505b50915091508115806126a557508051602014155b806126c157506126bc81600063ffffffff61339c16565b600114155b156127cc5760405160609063020604bf60e21b906126e3908790602401615808565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050856001600160a01b031681604051612730919061551f565b600060405180830381855afa9150503d806000811461276b576040519150601f19603f3d011682016040523d82523d6000602084013e612770565b606091505b509093509150828015612784575081516020145b80156127b357506002546001600160a01b03166127a883600c63ffffffff61336916565b6001600160a01b0316145b6127be5760006127c1565b60015b60ff16975050611c0c565b60001996505050505050611e2e565b6001600160e01b0319811663a7cb5fb760e01b14156129095760006127ff84611ef3565b50506003546040519294506060935063e985e9c560e01b92612830925089916001600160a01b03169060240161554f565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060836001600160a01b031683604051612881919061551f565b600060405180830381855afa9150503d80600081146128bc576040519150601f19603f3d011682016040523d82523d6000602084013e6128c1565b606091505b50915091508180156128d4575080516020145b80156128f057506128ec81600063ffffffff61339c16565b6001145b6128fb57600061259d565b600019955050505050611e2e565b6001600160e01b0319811663619ce88560e11b141561292c576000199150611e2e565b6001600160e01b0319811663dc1600f360e01b1415611e2e5760008061295185611527565b50925092505061295f6139ae565b6001600160a01b0316826001600160a01b031614801561298c57506005546001600160a01b038281169116145b15612aa957600554604051606091636eb1769f60e11b916129bd918a916001600160a01b039091169060240161554f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050600060606129fd6139c6565b6001600160a01b031683604051612a14919061551f565b600060405180830381855afa9150503d8060008114612a4f576040519150601f19603f3d011682016040523d82523d6000602084013e612a54565b606091505b50915091506000828015612a69575081516020145b612a74576000612a85565b612a8582600063ffffffff61339c16565b90506000198114612a9e57612a99816139de565b612aa2565b6000195b9750505050505b50505092915050565b6000612abc6140d7565b612b0f8584600660009054906101000a90046001600160a01b03166001600160a01b0316631ce4c78b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561163a57600080fd5b60408051600480825260a0820190925291925060609190816020015b6060815260200190600190039081612b2b57505060408051600480825260a082019092529192506060919060208201608080388339505060408051600480825260a08201909252929350606092915060208201608080388339505060408051600480825260a0820190925292935060609291506020820160808038833901905050905088610160015184600081518110612bc157fe5b60200260200101819052508783600081518110612bda57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050886000015182600081518110612c0c57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508681600081518110612c3a57fe5b60200260200101818152505088610140015184600181518110612c5957fe5b6020026020010181905250886000015183600181518110612c7657fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508782600181518110612ca457fe5b60200260200101906001600160a01b031690816001600160a01b031681525050846000015181600181518110612cd657fe5b602002602001018181525050886101a0015184600281518110612cf557fe5b60200260200101819052508783600281518110612d0e57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050886040015182600281518110612d4057fe5b60200260200101906001600160a01b031690816001600160a01b031681525050846060015181600281518110612d7257fe5b60200260200101818152505088610180015184600381518110612d9157fe5b6020026020010181905250886000015183600381518110612dae57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050886040015182600381518110612de057fe5b60200260200101906001600160a01b031690816001600160a01b03168152505084604001518160038151811061183f57fe5b6040516060906394cfcdd760e01b9061211d90859085906024016157b5565b6000612e43828263ffffffff61333516565b90506001600160e01b03198116630f47261b60e41b1480612e7457506001600160e01b0319811663012b8bc960e11b145b80612e8f57506001600160e01b0319811663a7cb5fb760e01b145b80612eaa57506001600160e01b031981166394cfcdd760e01b145b80612ec557506001600160e01b0319811663619ce88560e11b145b610c7e5760405162461bcd60e51b815260040161083390615cc9565b606080606060008551905080604051908082528060200260200182016040528015612f2657816020015b612f13614106565b815260200190600190039081612f0b5790505b50935080604051908082528060200260200182016040528015612f53578160200160208202803883390190505b50925080604051908082528060200260200182016040528015612f80578160200160208202803883390190505b50915060005b81811461301057612fbd878281518110612f9c57fe5b6020026020010151878381518110612fb057fe5b6020026020010151613032565b8751889085908110612fcb57fe5b60200260200101878581518110612fde57fe5b60200260200101878681518110612ff157fe5b9315156020948502919091019093019290925291905252600101612f86565b50509250925092565b606080613026848461236a565b91506108818484610ba9565b61303a614106565b600654604051639d3fa4b960e01b815260009182916001600160a01b0390911690639d3fa4b99061306f908890600401615d15565b60606040518083038186803b15801561308757600080fd5b505afa15801561309b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130bf9190810190614ed4565b855160065460405163a12dcc6f60e01b815292955090916001600160a01b039091169063a12dcc6f906130f89089908990600401615d28565b60206040518083038186803b15801561311057600080fd5b505afa158015613124573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506131489190810190614d1a565b9150600061315b828861014001516108e7565b60a088015160c08901516101808a01516101408b01519394509192909160009161318a9163ffffffff613c1716565b156131b7576131b0846131aa848d60800151613c3c90919063ffffffff16565b85613c58565b9050613210565b816131cb576131b0848b6080015185613c58565b60006131dc868c61018001516108e7565b905060006131ef868d6080015187613c58565b905060006131fe838688613c58565b905061320a82826133b3565b93505050505b61323061322a896040015185613c7a90919063ffffffff16565b826133b3565b965060046132438b8c602001518a6115dd565b600481111561324e57fe5b1461325a57600061325c565b865b965050505050509250925092565b600080600061327b846107a0613c99565b600061329460048651876132f29092919063ffffffff16565b8060200190516108c791908101906151f9565b63fdb6ca8d60e01b90565b60006132bf836000613335565b90506001600160e01b0319808216908316146132ed5760405162461bcd60e51b815260040161083390615ca3565b505050565b6060818311156133105761331061330b60008585613ca4565b613cc3565b83518211156133295761332961330b6001848751613ca4565b50819003910190815290565b600081600401835110156133565761335661330b6003855185600401613ca4565b5001602001516001600160e01b03191690565b6000816014018351101561338a5761338a61330b6004855185601401613ca4565b5001601401516001600160a01b031690565b6000610cd98383613ccb565b6318e4b14160e01b90565b60008183106133c25781610cd9565b5090919050565b634678472b60e01b90565b63b6555d6f60e01b90565b6324410cd360e11b90565b631b8388f760e01b90565b630e94a7ed60e41b90565b634ad3127560e01b90565b6060818311156134245761342461330b60008585613ca4565b835182111561343d5761343d61330b6001848751613ca4565b8282036040519080825280601f01601f19166020018201604052801561346a576020820181803883390190505b509050610cd961347982613cf5565b8461348387613cf5565b018351613cfb565b60608060606134a7600485518661340b9092919063ffffffff16565b8060200190516109499190810190614bc5565b60408051600180825281830190925260609182918291816020015b6134dd614044565b8152602001906001900390816134d55750506040805160018082528183019092529194506020808301908038833901905050604080516001808252818301909252919350816020015b6060815260200190600190039081613526575050845190915061355390859060049063ffffffff61340b16565b80602001905161356691908101906150ab565b8560008151811061357357fe5b602002602001018560008151811061358757fe5b602002602001018560008151811061359b57fe5b6020908102919091010192909252919052529193909250565b6040805160018082528183019092526060918291829160208083019080388339505085519193506135f09186915060049063ffffffff61340b16565b8060200190516136039190810190614c3e565b8451859060009061361057fe5b60209081029190910101919091529095929450925050565b628e3db960e51b90565b61363a6140d7565b6020810184905260a08501516080860151613656918691613da0565b815260a085015160c086015161366d918691613da0565b604082015260a085015160e0860151613687918691613da0565b606082015261369c828463ffffffff613dd416565b6080820152949350505050565b60405160009060609063b04fbddd60e01b906136cf908890889088908890602401615664565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260065491519092506060916001600160a01b03169061372190849061551f565b6000604051808303816000865af19150503d806000811461375e576040519150601f19603f3d011682016040523d82523d6000602084013e613763565b606091505b5091506000905061377a828263ffffffff61333516565b90506137846133df565b6001600160e01b0319828116911614156137c15760006137a383610998565b5091505060ff811660048111156137b657fe5b9450505050506118bb565b6137c96133c9565b6001600160e01b0319828116911614156137fc5760006137e88361090f565b509091505060ff811660048111156137b657fe5b815160208301207ff43f26ea5a94b478394a975e856464913dc1a8a1ca70939d974aa7c238aa0ce0141561383657600493505050506118bb565b60405162461bcd60e51b815260040161083390615c18565b8351602094850120835193850193909320604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f815295860194909452928401929092526060830152608082015260a0902090565b6000610cd9826138b485613e05565b613e80565b6350ae068360e11b90565b6040516000906060906370a0823160e01b906138e490859060240161553b565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050905060006060856001600160a01b031683604051613935919061551f565b600060405180830381855afa9150503d8060008114613970576040519150601f19603f3d011682016040523d82523d6000602084013e613975565b606091505b5091509150818015613988575080516020145b6139935760006139a4565b6139a481600063ffffffff61339c16565b9695505050505050565b736b175474e89094c44da98b954eedeac495271d0f90565b7306af07097c9eeb7fd685c692751d5c66db49c21590565b6000806139e96139c6565b6001600160a01b0316634ba2363a6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613a2357600080fd5b505af1158015613a37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613a5b9190810190614eb8565b90506000816001600160a01b03166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613a9a57600080fd5b505af1158015613aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613ad291908101906151b4565b4211613b5057816001600160a01b031663c92aecc46040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613b1357600080fd5b505af1158015613b27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613b4b91908101906151b4565b613bc3565b816001600160a01b0316639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613b8b57600080fd5b505af1158015613b9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613bc391908101906151b4565b90506118bb816b033b2e3c9fd0803ce800000086613c58565b630fcb446360e31b90565b6000610cd9826138b485613e9f565b635bd0428d60e01b90565b6320d11f6160e01b90565b633d66146160e21b90565b600081518351148015610cd95750508051602091820120825192909101919091201490565b600082820183811015610cd957610cd961330b60008686613f58565b60006118bb83613c6e868563ffffffff613dd416565b9063ffffffff613f7716565b600082821115613c9357613c9361330b60028585613f58565b50900390565b631ca78ed960e31b90565b6060632800659560e01b848484604051602401610ca493929190615b19565b805160208201fd5b60008160200183511015613cec57613cec61330b6005855185602001613ca4565b50016020015190565b60200190565b6020811015613d25576001816020036101000a0380198351168185511680821786525050506132ed565b82821415613d32576132ed565b82821115613d6c5760208103905080820181840181515b82851015613d64578451865260209586019590940193613d49565b9052506132ed565b60208103905080820181840183515b81861215613d975782518252601f199283019290910190613d7b565b85525050505050565b6000613dad848484613fa1565b15613dc057613dc061330b858585614007565b6118bb83613c6e868563ffffffff613dd416565b600082613de357506000610909565b82820282848281613df057fe5b0414610cd957610cd961330b60018686613f58565b608081810151825160208085015160408087015160609788015186519685019690962082517fec69816980a3a3ca4554410e60253953e9ff375ba4536a98adfa15cc7154150881529485019590955290830191909152948101949094526001600160a01b039091169183019190915260a082015260c0902090565b60405161190160f01b8152600281019290925260228201526042902090565b6101408101516101608201516101808301516101a08401516000937ff80322eb8376aafb64eadf8f0d7623f22130fd9491a221e902b713cb984a753493909290916020871015613eeb57fe5b601f1987018051610140890180516101608b0180516101808d0180516101a08f0180519d89528c5160209d8e012087528b519b8d019b909b2084528951998c01999099208152875197909a019690962088526101e085209390945290529190529252919091529050919050565b606063e946c1bb60e01b848484604051602401610ca493929190615aa5565b600081613f8d57613f8d61330b60038585613f58565b6000828481613f9857fe5b04949350505050565b600082613fb357613fb361330b614026565b811580613fbe575083155b15613fcb57506000610cd9565b60008380613fd557fe5b8584099050613fea858463ffffffff613dd416565b613ffc826103e863ffffffff613dd416565b101595945050505050565b606063339f3de260e01b848484604051602401610ca493929190615d4d565b60408051808201909152600481526329e460df60e21b602082015290565b604051806101c0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6040805160608101909152806000815260006020820181905260409091015290565b803561090981615e3b565b805161090981615e3b565b600082601f83011261414e578081fd5b813561416161415c82615d89565b615d63565b81815291506020808301908481018184028601820187101561418257600080fd5b60005b84811015611e2957813561419881615e3b565b84529282019290820190600101614185565b600082601f8301126141ba578081fd5b81516141c861415c82615d89565b8181529150602080830190840160005b83811015614205576141f0876020845189010161442a565b835260209283019291909101906001016141d8565b5050505092915050565b600082601f83011261421f578081fd5b813561422d61415c82615d89565b8181529150602080830190840160005b838110156142055761425587602084358901016143dc565b8352602092830192919091019060010161423d565b600082601f83011261427a578081fd5b815161428861415c82615d89565b8181529150602080830190840160005b83811015614205576142b087602084518901016145be565b83526020928301929190910190600101614298565b600082601f8301126142d5578081fd5b81356142e361415c82615d89565b8181529150602080830190840160005b838110156142055761430b8760208435890101614470565b835260209283019291909101906001016142f3565b600082601f830112614330578081fd5b815161433e61415c82615d89565b81815291506020808301908481018184028601820187101561435f57600080fd5b60005b84811015611e2957815184529282019290820190600101614362565b600082601f83011261438e578081fd5b813561439c61415c82615d89565b8181529150602080830190848101818402860182018710156143bd57600080fd5b60005b84811015611e29578135845292820192908201906001016143c0565b600082601f8301126143ec578081fd5b81356143fa61415c82615da8565b915080825283602082850101111561441157600080fd5b8060208401602084013760009082016020015292915050565b600082601f83011261443a578081fd5b815161444861415c82615da8565b915080825283602082850101111561445f57600080fd5b611e2e816020840160208601615dd6565b60006101c0808385031215614483578182fd5b61448c81615d63565b9150506144998383614128565b81526144a88360208401614128565b60208201526144ba8360408401614128565b60408201526144cc8360608401614128565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100808301358183015250610120808301358183015250610140808301356001600160401b038082111561452d57600080fd5b614539868387016143dc565b8385015261016092508285013591508082111561455557600080fd5b614561868387016143dc565b8385015261018092508285013591508082111561457d57600080fd5b614589868387016143dc565b838501526101a09250828501359150808211156145a557600080fd5b506145b2858286016143dc565b82840152505092915050565b60006101c08083850312156145d1578182fd5b6145da81615d63565b9150506145e78383614133565b81526145f68360208401614133565b60208201526146088360408401614133565b604082015261461a8360608401614133565b60608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e0820152610100808301518183015250610120808301518183015250610140808301516001600160401b038082111561467b57600080fd5b6146878683870161442a565b838501526101609250828501519150808211156146a357600080fd5b6146af8683870161442a565b838501526101809250828501519150808211156146cb57600080fd5b6146d78683870161442a565b838501526101a09250828501519150808211156146f357600080fd5b506145b28582860161442a565b805160ff8116811461090957600080fd5b600060208284031215614722578081fd5b8135610cd981615e3b565b6000806040838503121561473f578081fd5b825161474a81615e3b565b602084015190925061475b81615e3b565b809150509250929050565b60008060006060848603121561477a578081fd5b835161478581615e3b565b602085015190935061479681615e3b565b60408501519092506001600160401b038111156147b1578182fd5b6147bd8682870161442a565b9150509250925092565b6000806000606084860312156147db578081fd5b83516147e681615e3b565b60208501519093506147f781615e3b565b80925050604084015190509250925092565b60008060006060848603121561481d578081fd5b835161482881615e3b565b60208501519093506001600160401b03811115614843578182fd5b61484f8682870161442a565b925050604084015190509250925092565b60008060008060808587031215614875578182fd5b845161488081615e3b565b60208601519094506001600160401b038082111561489c578384fd5b6148a88883890161442a565b945060408701519150808211156148bd578384fd5b6148c98883890161442a565b935060608701519150808211156148de578283fd5b506148eb8782880161442a565b91505092959194509250565b60008060408385031215614909578182fd5b823561491481615e3b565b915060208301356001600160401b0381111561492e578182fd5b61493a8582860161420f565b9150509250929050565b60008060008060808587031215614959578182fd5b843561496481615e3b565b935060208501356001600160401b038082111561497f578384fd5b61498b8883890161437e565b945060408701359150808211156149a0578384fd5b6149ac8883890161437e565b935060608701359150808211156149c1578283fd5b506148eb878288016143dc565b600080604083850312156149e0578182fd5b82356149eb81615e3b565b915060208301356001600160401b03811115614a05578182fd5b61493a858286016143dc565b600080600060608486031215614a25578081fd5b8335614a3081615e3b565b925060208401356001600160401b03811115614a4a578182fd5b614a56868287016143dc565b925050604084013590509250925092565b60008060408385031215614a79578182fd5b8235614a8481615e3b565b946020939093013593505050565b600060208284031215614aa3578081fd5b81356001600160401b03811115614ab8578182fd5b6118bb8482850161413e565b600060208284031215614ad5578081fd5b81516001600160401b03811115614aea578182fd5b6118bb8482850161426a565b600080600060608486031215614b0a578081fd5b83356001600160401b0380821115614b20578283fd5b614b2c878388016142c5565b94506020860135915080821115614b41578283fd5b614b4d8783880161413e565b93506040860135915080821115614b62578283fd5b506147bd8682870161437e565b60008060408385031215614b81578182fd5b82356001600160401b0380821115614b97578384fd5b614ba3868387016142c5565b93506020850135915080821115614bb8578283fd5b5061493a8582860161420f565b600080600060608486031215614bd9578081fd5b83516001600160401b0380821115614bef578283fd5b614bfb8783880161426a565b94506020860151915080821115614c10578283fd5b614c1c87838801614320565b93506040860151915080821115614c31578283fd5b506147bd868287016141aa565b600080600060608486031215614c52578081fd5b83516001600160401b0380821115614c68578283fd5b614c748783880161426a565b9450602086015193506040860151915080821115614c31578283fd5b60008060408385031215614ca2578182fd5b82356001600160401b0380821115614cb8578384fd5b614ba38683870161437e565b60008060408385031215614cd6578182fd5b82516001600160401b0380821115614cec578384fd5b614cf886838701614320565b93506020850151915080821115614d0d578283fd5b5061493a858286016141aa565b600060208284031215614d2b578081fd5b81518015158114610cd9578182fd5b60008060008060808587031215614d4f578182fd5b845193506020850151614d6181615e3b565b60408601519093506001600160401b03808211156148bd578384fd5b60008060408385031215614d8f578182fd5b505080516020909101519092909150565b60008060408385031215614db2578182fd5b8251915060208301516001600160401b03811115614dce578182fd5b61493a8582860161442a565b600080600060608486031215614dee578081fd5b8351925060208401516001600160401b0380821115614e0b578283fd5b614e178783880161442a565b93506040860151915080821115614e2c578283fd5b506147bd8682870161442a565b60008060408385031215614e4b578182fd5b82519150602083015161475b81615e50565b60008060408385031215614e6f578182fd5b82516001600160e01b03198116811461474a578283fd5b600060208284031215614e97578081fd5b81356001600160401b03811115614eac578182fd5b6118bb848285016143dc565b600060208284031215614ec9578081fd5b8151610cd981615e3b565b600060608284031215614ee5578081fd5b614eef6060615d63565b825160078110614efd578283fd5b8152602083810151908201526040928301519281019290925250919050565b600060208284031215614f2d578081fd5b81516001600160401b03811115614f42578182fd5b6118bb848285016145be565b600080600060608486031215614f62578081fd5b83356001600160401b03811115614f77578182fd5b614f8386828701614470565b9350506020840135614f9481615e3b565b929592945050506040919091013590565b60008060408385031215614fb7578182fd5b82356001600160401b0380821115614fcd578384fd5b614fd986838701614470565b93506020850135915080821115614fee578283fd5b5061493a858286016143dc565b60008060006060848603121561500f578081fd5b83356001600160401b03811115615024578182fd5b61503086828701614470565b93505060208401359150604084013561504881615e3b565b809150509250925092565b60008060008060808587031215615068578182fd5b84516001600160401b038082111561507e578384fd5b61508a888389016145be565b9550602087015191508082111561509f578384fd5b6148a8888389016145be565b6000806000606084860312156150bf578081fd5b83516001600160401b03808211156150d5578283fd5b6150e1878388016145be565b9450602086015193506040860151915080821115614e2c578283fd5b600080600060608486031215615111578081fd5b83356001600160401b0380821115615127578283fd5b81860160a08189031215615139578384fd5b61514360a0615d63565b925080358352602081013560208401526040810135604084015261516a8860608301614128565b6060840152608081013582811115615180578485fd5b61518c898284016143dc565b6080850152509194505050602084013591506151ab8560408601614128565b90509250925092565b6000602082840312156151c5578081fd5b5051919050565b600080604083850312156151de578182fd5b82516151e981615e50565b6020939093015192949293505050565b60008060006060848603121561520d578081fd5b835161521881615e50565b60208501516040860151919450925061504881615e3b565b60008060008060808587031215615245578182fd5b61524f8686614700565b935060208501519250604085015161526681615e3b565b60608601519092506001600160401b03811115615281578182fd5b6148eb8782880161442a565b6000806000606084860312156152a1578081fd5b6152ab8585614700565b92506020840151915060408401516001600160401b038111156147b1578182fd5b6000806000606084860312156152e0578081fd5b6152ea8585614700565b925060208401519150604084015190509250925092565b6001600160a01b03169052565b6000815180845260208401935060208301825b828110156153485781516001600160a01b0316865260209586019590910190600101615321565b5093949350505050565b600081518084526020840180819550602083028101915060208501845b8481101561539d5782840388526153878483516153da565b602098890198909450919091019060010161536f565b50919695505050505050565b6000815180845260208401935060208301825b828110156153485781518652602095860195909101906001016153bc565b600081518084526153f2816020860160208601615dd6565b601f01601f19169290920160200192915050565b805161541181615e27565b825260208181015190830152604090810151910152565b60006101c0615438848451615301565b602083015161544a6020860182615301565b50604083015161545d6040860182615301565b5060608301516154706060860182615301565b506080830151608085015260a083015160a085015260c083015160c085015260e083015160e08501526101008084015181860152506101208084015181860152506101408084015182828701526154c9838701826153da565b915050610160915081840151858203838701526154e682826153da565b92505050610180808401518583038287015261550283826153da565b9150506101a0915081840151858203838701526139a482826153da565b60008251615531818460208701615dd6565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03851681526080602082018190526000906155b1908301866153a9565b82810360408401526155c381866153a9565b83810360608501526155d581866153da565b98975050505050505050565b6001600160a01b0384168152606060208201819052600090615605908301856153da565b9050826040830152949350505050565b6001600160a01b0385168152608060208201819052600090615639908301866153da565b82810360408401526155c381866153da565b6001600160a01b03929092168252602082015260400190565b6000608082526156776080830187615352565b8281036020840152615689818761530e565b838103604085015261569b818761530e565b91505082810360608401526156b081856153a9565b979650505050505050565b602080825282518282018190526000918401906040840190835b818110156156fc5783516156e881615e31565b8352602093840193909201916001016156d5565b509095945050505050565b606080825284519082018190526000906020906080840190828801845b8281101561574a57615737848351615406565b6060939093019290840190600101615724565b5050508381038285015261575e81876153a9565b84810360408601528551808252908301915082860190845b81811015615794578251151584529284019291840191600101615776565b509198975050505050505050565b600060208252610cd960208301846153a9565b6000604082526157c860408301856153a9565b82810360208401526157da8185615352565b95945050505050565b6000604082526157f660408301856153a9565b82810360208401526157da81856153a9565b90815260200190565b8481526001600160a01b038416602082015260806040820181905260009061583b908301856153da565b82810360608401526156b081856153da565b918252602082015260400190565b6000838252604060208301526118bb60408301846153da565b60008482526060602083015261588d60608301856153da565b82810360408401526139a481856153da565b828152604081016158af83615e27565b8260208301529392505050565b6001600160e01b031991909116815260200190565b6001600160e01b03199290921682526001600160a01b0316602082015260400190565b6001600160e01b0319851681526001600160a01b038481166020830152831660408201526080606082018190526000906139a4908301846153da565b6001600160e01b0319861681526001600160a01b038516602082015260a060408201819052600090615964908301866153a9565b828103606084015261597681866153a9565b838103608085015261185781866153da565b6001600160e01b0319851681526001600160a01b03841660208201526080604082018190526000906159bc908301856153da565b905082606083015295945050505050565b6001600160e01b03199390931683526001600160a01b03919091166020830152604082015260600190565b600063ffffffff60e01b8516825260606020830152615a1a60608301856153a9565b82810360408401526139a48185615352565b600060208252610cd960208301846153da565b600060808252615a5260808301876153da565b6001600160a01b03958616602084015293909416604082015260ff9190911660609091015292915050565b6000615a8885615e06565b848252836020830152606060408301526157da60608301846153da565b60608101615ab285615e13565b938152602081019290925260409091015290565b60608101615ad385615e1d565b93815260208101929092526001600160a01b031660409091015290565b60408101615afd84615dcb565b82528260208301529392505050565b60608101615ab285615e1d565b6060810160088510615ab257fe5b6020810160058310615b3557fe5b91905290565b6000615b4686615e27565b858252602082018590526001600160a01b03841660408301526080606083018190526139a4908301846153da565b60408101615b8184615e06565b9281526020015290565b600060808252615b9e60808301876153da565b602083820381850152818751808452828401915082838202850101838a01865b83811015615bec57601f19878403018552615bda838351615428565b94860194925090850190600101615bbe565b50508681036040880152615c00818a6153a9565b94505050505082810360608401526156b08185615352565b602080825260139082015272554e4b4e4f574e5f52455455524e5f4441544160681b604082015260600190565b60208082526019908201527f554e4b4e4f574e5f46554e4354494f4e5f53454c4543544f5200000000000000604082015260600190565b6020808252600d908201526c15539253541311535153951151609a1b604082015260600190565b6020808252600c908201526b2120a22fa9a2a622a1aa27a960a11b604082015260600190565b6020808252600e908201526d15d493d391d7d41493d61657d25160921b604082015260600190565b60a08101615cff8286615406565b8360608301528215156080830152949350505050565b600060208252610cd96020830184615428565b600060408252615d3b6040830185615428565b82810360208401526157da81856153da565b9283526020830191909152604082015260600190565b6040518181016001600160401b0381118282101715615d8157600080fd5b604052919050565b60006001600160401b03821115615d9e578081fd5b5060209081020190565b60006001600160401b03821115615dbd578081fd5b50601f01601f191660200190565b8060048110610c7e57fe5b60005b83811015615df1578181015183820152602001615dd9565b83811115615e00576000848401525b50505050565b60028110615e1057fe5b50565b60048110615e1057fe5b60038110615e1057fe5b60078110615e1057fe5b60058110615e1057fe5b6001600160a01b0381168114615e1057600080fd5b60ff81168114615e1057600080fdfea365627a7a723158204a2b7e0b627f8569a96330223d15388afdd2cd939cdc1d7d132b077a94196b316c6578706572696d656e74616cf564736f6c63430005100040"
            }
        }
    },
    "compiler": {
        "name": "solc",
        "version": "soljson-v0.5.16+commit.9c3226ce.js",
        "settings": {
            "optimizer": {
                "enabled": true,
                "runs": 200,
                "details": { "yul": true, "deduplicate": true, "cse": true, "constantOptimizer": true }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "istanbul"
        }
    },
    "chains": {}
}
